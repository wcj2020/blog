<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[鼠标滚动mousewheel和touch滑动全屏切换效果]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/17/%E9%BC%A0%E6%A0%87%E6%BB%9A%E5%8A%A8mousewheel%E5%92%8Ctouch%E6%BB%91%E5%8A%A8%E5%85%A8%E5%B1%8F%E5%88%87%E6%8D%A2%E6%95%88%E6%9E%9C/</url>
      <content type="html"><![CDATA[<h3 id="根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。"><a href="#根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。" class="headerlink" title="根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。"></a>根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。</h3><p><img src="http://blog.wangchunjian.win/2016/2/demo.gif" alt="效果图"></p>
<p>兼容火狐、360极速和兼容模式…安卓手机360浏览器测试也正常</p>
<p><a href="http://blog.wangchunjian.win/2016/2/index4.html">效果页面</a></p>
<a id="more"></a>
<p>兼容性或性能可能比较烂,不过都是最简单的JS实现的。其实就类似于一些轮播或banner图切换效果。只不过这个是全屏。</p>
<p>最外层的<code>container</code>高度为300%；里面放置三个<code>div</code>从上往下依次排列。<code>css</code>控制下每个<code>div</code>都是铺满浏览器可视窗口。</p>
<p><code>firefox</code>和<code>chrome</code>,<code>ie</code>的<code>mousewheel</code>兼容代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).on(<span class="string">"mousewheel DOMMouseScroll"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;  </div><div class="line">    <span class="keyword">var</span> delta = (e.originalEvent.wheelDelta &amp;&amp;</div><div class="line">    (e.originalEvent.wheelDelta &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">-1</span>)) || </div><div class="line">    (e.originalEvent.detail &amp;&amp; (e.originalEvent.detail &gt; <span class="number">0</span> </div><div class="line">    ? <span class="number">-1</span> : <span class="number">1</span>));              <span class="comment">//chrome &amp; ie || firefox</span></div><div class="line">    <span class="keyword">if</span> (delta &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="comment">// 向上滚        </span></div><div class="line">        scrollpage(<span class="string">'up'</span>);  	</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"wheelup"</span>);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="comment">// 向下滚</span></div><div class="line">        scrollpage(<span class="string">'down'</span>)</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"wheeldown"</span>);</div><div class="line">    &#125; </div><div class="line">    <span class="built_in">console</span>.log(e.originalEvent.detail||e.originalEvent.wheelDelta);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>后面,每一屏内添加一些<code>元素</code>.结合一些<code>css3</code>的<code>transform</code>和<code>transition</code>和<code>@keyframes</code>定义一些特效,就能达到一点点酷(装)炫(B)的效果。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS3 Filter的特效]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/16/%E6%B5%85%E8%B0%88CSS3-Filter%E7%9A%8410%E7%A7%8D%E7%89%B9%E6%95%88/</url>
      <content type="html"><![CDATA[<h2 id="css语法"><a href="#css语法" class="headerlink" title="css语法"></a>css语法</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">filter: none | blur() | brightness() | contrast() | drop-shadow() | grayscale() |</div><div class="line">hue-rotate() | invert() | opacity() | saturate() | sepia() | url();</div></pre></td></tr></table></figure>
<h2 id="高斯模糊-blur-示例"><a href="#高斯模糊-blur-示例" class="headerlink" title="高斯模糊(blur)示例"></a>高斯模糊(blur)示例</h2><p><a href="http://blog.wangchunjian.win/2016/css-filter/blur.html">demo</a><br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span> <span class="attr">class</span>=<span class="string">"no-js"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-class">.example</span> &#123;</div><div class="line">	    <span class="attribute">padding</span>: .<span class="number">625rem</span> <span class="number">1.825rem</span> .<span class="number">625rem</span> <span class="number">2.5rem</span>;</div><div class="line">	    <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#ccc</span> dashed;</div><div class="line">	    <span class="attribute">position</span>: relative;</div><div class="line">	    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> .<span class="number">625rem</span> <span class="number">0</span>;</div><div class="line">	    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</div><div class="line">        <span class="attribute">position</span>: absolute;   </div><div class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;   </div><div class="line">        <span class="attribute">left</span>: <span class="number">50%</span>;   </div><div class="line">        <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">-o-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%); </div><div class="line">	&#125;</div><div class="line"><span class="selector-class">.example</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(data-text);</div><div class="line">    <span class="attribute">text-transform</span>: lowercase;</div><div class="line">    <span class="attribute">left</span>: <span class="number">1.5rem</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">11.875rem</span>;</div><div class="line">    <span class="attribute">color</span>: gray;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">1rem</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1rem</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">1rem</span>;</div><div class="line">    <span class="attribute">text-align</span>: right;</div><div class="line">    <span class="attribute">white-space</span>: nowrap;</div><div class="line">    <span class="attribute">direction</span>: ltr;</div><div class="line">    <span class="attribute">width</span>: <span class="number">12.5rem</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-90deg);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-90deg);</div><div class="line">    <span class="attribute">-webkit-transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</div><div class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">-webkit-filter</span>: <span class="built_in">blur</span>(5px); <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(5px);</div><div class="line">	<span class="attribute">-webkit-transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">-moz-transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">-o-transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">-webkit-backface-visibility</span>: hidden;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateZ</span>(0) <span class="built_in">scale</span>(1.0, 1.0);</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">filter</span>:none&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"example"</span> <span class="attr">data-text</span>=<span class="string">"example"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图片使用高斯模糊效果:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://blog.wangchunjian.win/2016/marry.jpg"</span> <span class="attr">alt</span>=<span class="string">"marry"</span> &gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>注意：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> Internet Explorer 不支持 filter 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Parallux-响应式网页视差效果]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/16/Parallux-%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%A7%86%E5%B7%AE%E6%95%88%E6%9E%9C/</url>
      <content type="html"><![CDATA[<h1 id="Parallax-js"><a href="#Parallax-js" class="headerlink" title="Parallax.js"></a>Parallax.js</h1><p>示例：</p>
<ul>
<li><a href="http://blog.wangchunjian.win/2016/2/">Parallux-响应式网页滚动视觉差特效 &amp; CSS图片filter的blur模糊和灰色gray</a> </li>
<li><a href="http://blog.wangchunjian.win/2016/1/">纯css3实现视觉差效果</a><a id="more"></a>
</li>
</ul>
<p>Parallax Engine that reacts to the orientation of a smart device. Where no gyroscope or motion detection hardware is available, the position of the cursor is used instead.</p>
<p>Check out this <strong><a href="http://wagerfield.github.com/parallax/" target="_blank" rel="external">demo</a></strong> to see it in action!</p>
<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>Create a list of elements giving each item that you want to move within your parallax scene a class of <code>layer</code> and a <code>data-depth</code> attribute specifying its depth within the scene. A depth of <strong>0</strong> will cause the layer to remain stationary, and a depth of <strong>1</strong> will cause the layer to move by the total effect of the calculated motion. Values inbetween <strong>0</strong> and <strong>1</strong> will cause the layer to move by an amount relative to the supplied ratio.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"scene"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer1.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.20"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer2.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.40"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer3.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.60"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer4.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.80"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer5.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"1.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer6.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>To kickoff a <strong>Parallax</strong> scene, select your parent DOM Element and pass it to the <strong>Parallax</strong> constructor.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scene = <span class="built_in">document</span>.getElementById(<span class="string">'scene'</span>);</div><div class="line"><span class="keyword">var</span> parallax = <span class="keyword">new</span> Parallax(scene);</div></pre></td></tr></table></figure>
<h2 id="Understanding-Layer-Motion-Calculations"><a href="#Understanding-Layer-Motion-Calculations" class="headerlink" title="Understanding Layer Motion Calculations"></a>Understanding Layer Motion Calculations</h2><p>The amount of motion that each layer moves by depends on 3 contributing factors:</p>
<ol>
<li>The <code>scalarX</code> and <code>scalarY</code> values (see <a href="#behaviours">Behaviours</a> below for configuration)</li>
<li>The dimensions of the parent DOM element</li>
<li>The <code>depth</code> of a layer within a parallax scene (specified by it’s <code>data-depth</code> attribute)</li>
</ol>
<p>The calculation for this motion is as follows:</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xMotion = parentElement.width  * (scalarX / <span class="number">100</span>) * layerDepth</div><div class="line">yMotion = parentElement.height * (scalarY / <span class="number">100</span>) * layerDepth</div></pre></td></tr></table></figure>
<p>So for a layer with a <code>data-depth</code> value of <code>0.5</code> within a scene that has both the <code>scalarX</code> and <code>scalarY</code> values set to <code>10</code> ( <em>the default</em> ) where the containing scene element is <code>1000px x 1000px</code>, the total motion of the layer in both <code>x</code> and <code>y</code> would be:</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xMotion = <span class="number">1000</span> * (<span class="number">10</span> / <span class="number">100</span>) * <span class="number">0.5</span> = <span class="number">50</span> <span class="comment"># 50px of positive and negative motion in x</span></div><div class="line">yMotion = <span class="number">1000</span> * (<span class="number">10</span> / <span class="number">100</span>) * <span class="number">0.5</span> = <span class="number">50</span> <span class="comment"># 50px of positive and negative motion in y</span></div></pre></td></tr></table></figure>
<h2 id="Behaviours"><a href="#Behaviours" class="headerlink" title="Behaviours"></a>Behaviours</h2><p>There are a number of behaviours that you can setup for any given <strong>Parallax</strong> instance. These behaviours can either be specified in the markup via data attributes or in JavaScript via the constructor and API.</p>
<table>
<thead>
<tr>
<th>Behaviour</th>
<th>Values</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>relativeInput</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to use the coordinate system of the <code>element</code> passed to the parallax <code>constructor</code>. <strong>Mouse input only.</strong></td>
</tr>
<tr>
<td><code>clipRelativeInput</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to clip the mouse input to the bounds of the <code>element</code> passed to the parallax <code>constructor</code>. <strong>Mouse input only.</strong></td>
</tr>
<tr>
<td><code>calibrate-x</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to cache &amp; calculate the motion relative to the initial <code>x</code> axis value on initialisation.</td>
</tr>
<tr>
<td><code>calibrate-y</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to cache &amp; calculate the motion relative to the initial <code>y</code> axis value on initialisation.</td>
</tr>
<tr>
<td><code>invert-x</code></td>
<td><code>true</code> or <code>false</code></td>
<td><code>true</code> moves layers in opposition to the device motion, <code>false</code> slides them away.</td>
</tr>
<tr>
<td><code>invert-y</code></td>
<td><code>true</code> or <code>false</code></td>
<td><code>true</code> moves layers in opposition to the device motion, <code>false</code> slides them away.</td>
</tr>
<tr>
<td><code>limit-x</code></td>
<td><code>number</code> or <code>false</code></td>
<td>A numeric value limits the total range of motion in <code>x</code>, <code>false</code> allows layers to move with complete freedom.</td>
</tr>
<tr>
<td><code>limit-y</code></td>
<td><code>number</code> or <code>false</code></td>
<td>A numeric value limits the total range of motion in <code>y</code>, <code>false</code> allows layers to move with complete freedom.</td>
</tr>
<tr>
<td><code>scalar-x</code></td>
<td><code>number</code></td>
<td>Multiplies the input motion by this value, increasing or decreasing the sensitivity of the layer motion.</td>
</tr>
<tr>
<td><code>scalar-y</code></td>
<td><code>number</code></td>
<td>Multiplies the input motion by this value, increasing or decreasing the sensitivity of the layer motion.</td>
</tr>
<tr>
<td><code>friction-x</code></td>
<td><code>number</code> <code>0 - 1</code></td>
<td>The amount of friction the layers experience. This essentially adds some easing to the layer motion.</td>
</tr>
<tr>
<td><code>friction-y</code></td>
<td><code>number</code> <code>0 - 1</code></td>
<td>The amount of friction the layers experience. This essentially adds some easing to the layer motion.</td>
</tr>
<tr>
<td><code>origin-x</code></td>
<td><code>number</code></td>
<td>The <code>x</code> origin of the mouse input. Defaults to 0.5 (the center). <code>0</code> moves the origin to the left edge, <code>1</code> to the right edge. <strong>Mouse input only.</strong></td>
</tr>
<tr>
<td><code>origin-y</code></td>
<td><code>number</code></td>
<td>The <code>y</code> origin of the mouse input. Defaults to 0.5 (the center). <code>0</code> moves the origin to the top edge, <code>1</code> to the bottom edge. <strong>Mouse input only.</strong></td>
</tr>
</tbody>
</table>
<p>In addition to the behaviours described above, there are <strong>two</strong> methods <code>enable()</code> and <code>disable()</code> that <em>activate</em> and <em>deactivate</em> the <strong>Parallax</strong> instance respectively.</p>
<h3 id="Behaviours-Data-Attributes-Example"><a href="#Behaviours-Data-Attributes-Example" class="headerlink" title="Behaviours: Data Attributes Example"></a>Behaviours: Data Attributes Example</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"scene"</span></span></div><div class="line">  <span class="attr">data-calibrate-x</span>=<span class="string">"false"</span></div><div class="line">  <span class="attr">data-calibrate-y</span>=<span class="string">"true"</span></div><div class="line">  <span class="attr">data-invert-x</span>=<span class="string">"false"</span></div><div class="line">  <span class="attr">data-invert-y</span>=<span class="string">"true"</span></div><div class="line">  <span class="attr">data-limit-x</span>=<span class="string">"false"</span></div><div class="line">  <span class="attr">data-limit-y</span>=<span class="string">"10"</span></div><div class="line">  <span class="attr">data-scalar-x</span>=<span class="string">"2"</span></div><div class="line">  <span class="attr">data-scalar-y</span>=<span class="string">"8"</span></div><div class="line">  <span class="attr">data-friction-x</span>=<span class="string">"0.2"</span></div><div class="line">  <span class="attr">data-friction-y</span>=<span class="string">"0.8"</span></div><div class="line">  <span class="attr">data-origin-x</span>=<span class="string">"0.0"</span></div><div class="line">  <span class="attr">data-origin-y</span>=<span class="string">"1.0"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer1.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.20"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer2.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.40"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer3.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.60"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer4.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.80"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer5.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"1.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer6.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Behaviours-Constructor-Object-Example"><a href="#Behaviours-Constructor-Object-Example" class="headerlink" title="Behaviours: Constructor Object Example"></a>Behaviours: Constructor Object Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scene = <span class="built_in">document</span>.getElementById(<span class="string">'scene'</span>);</div><div class="line"><span class="keyword">var</span> parallax = <span class="keyword">new</span> Parallax(scene, &#123;</div><div class="line">  calibrateX: <span class="literal">false</span>,</div><div class="line">  calibrateY: <span class="literal">true</span>,</div><div class="line">  invertX: <span class="literal">false</span>,</div><div class="line">  invertY: <span class="literal">true</span>,</div><div class="line">  limitX: <span class="literal">false</span>,</div><div class="line">  limitY: <span class="number">10</span>,</div><div class="line">  scalarX: <span class="number">2</span>,</div><div class="line">  scalarY: <span class="number">8</span>,</div><div class="line">  frictionX: <span class="number">0.2</span>,</div><div class="line">  frictionY: <span class="number">0.8</span>,</div><div class="line">  originX: <span class="number">0.0</span>,</div><div class="line">  originY: <span class="number">1.0</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Behaviours-API-Example"><a href="#Behaviours-API-Example" class="headerlink" title="Behaviours: API Example"></a>Behaviours: API Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scene = <span class="built_in">document</span>.getElementById(<span class="string">'scene'</span>);</div><div class="line"><span class="keyword">var</span> parallax = <span class="keyword">new</span> Parallax(scene);</div><div class="line">parallax.enable();</div><div class="line">parallax.disable();</div><div class="line">parallax.updateLayers(); <span class="comment">// Useful for reparsing the layers in your scene if you change their data-depth value</span></div><div class="line">parallax.calibrate(<span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">parallax.invert(<span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">parallax.limit(<span class="literal">false</span>, <span class="number">10</span>);</div><div class="line">parallax.scalar(<span class="number">2</span>, <span class="number">8</span>);</div><div class="line">parallax.friction(<span class="number">0.2</span>, <span class="number">0.8</span>);</div><div class="line">parallax.origin(<span class="number">0.0</span>, <span class="number">1.0</span>);</div></pre></td></tr></table></figure>
<h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p>If you’re using <strong><a href="http://jquery.com/" target="_blank" rel="external">jQuery</a></strong> or <strong><a href="http://zeptojs.com/" target="_blank" rel="external">Zepto</a></strong> and would prefer to<br>use <strong>Parallax.js</strong> as a plugin, you’re in luck!</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#scene'</span>).parallax();</div></pre></td></tr></table></figure>
<h3 id="jQuery-Passing-Options"><a href="#jQuery-Passing-Options" class="headerlink" title="jQuery: Passing Options"></a>jQuery: Passing Options</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#scene'</span>).parallax(&#123;</div><div class="line">  calibrateX: <span class="literal">false</span>,</div><div class="line">  calibrateY: <span class="literal">true</span>,</div><div class="line">  invertX: <span class="literal">false</span>,</div><div class="line">  invertY: <span class="literal">true</span>,</div><div class="line">  limitX: <span class="literal">false</span>,</div><div class="line">  limitY: <span class="number">10</span>,</div><div class="line">  scalarX: <span class="number">2</span>,</div><div class="line">  scalarY: <span class="number">8</span>,</div><div class="line">  frictionX: <span class="number">0.2</span>,</div><div class="line">  frictionY: <span class="number">0.8</span>,</div><div class="line">  originX: <span class="number">0.0</span>,</div><div class="line">  originY: <span class="number">1.0</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="jQuery-API"><a href="#jQuery-API" class="headerlink" title="jQuery: API"></a>jQuery: API</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $scene = $(<span class="string">'#scene'</span>).parallax();</div><div class="line">$scene.parallax(<span class="string">'enable'</span>);</div><div class="line">$scene.parallax(<span class="string">'disable'</span>);</div><div class="line">$scene.parallax(<span class="string">'updateLayers'</span>);</div><div class="line">$scene.parallax(<span class="string">'calibrate'</span>, <span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">$scene.parallax(<span class="string">'invert'</span>, <span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">$scene.parallax(<span class="string">'limit'</span>, <span class="literal">false</span>, <span class="number">10</span>);</div><div class="line">$scene.parallax(<span class="string">'scalar'</span>, <span class="number">2</span>, <span class="number">8</span>);</div><div class="line">$scene.parallax(<span class="string">'friction'</span>, <span class="number">0.2</span>, <span class="number">0.8</span>);</div><div class="line">$scene.parallax(<span class="string">'origin'</span>, <span class="number">0.0</span>, <span class="number">1.0</span>);</div></pre></td></tr></table></figure>
<h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>If you are writing a <strong>native iOS application</strong> and would like to use <strong>parallax.js</strong> within a <code>UIWebView</code>, you will need to do a little bit of work to get it running.</p>
<p><code>UIWebView</code> no longer automatically receives the <code>deviceorientation</code> event, so your native application must intercept the events from the gyroscope and reroute them to the <code>UIWebView</code>:</p>
<ol>
<li>Include the <strong>CoreMotion</strong> framework <code>#import &lt;CoreMotion/CoreMotion.h&gt;</code> and create a reference to the <strong>UIWebView</strong> <code>@property(nonatomic, strong) IBOutlet UIWebView *parallaxWebView;</code></li>
<li>Add a property to the app delegate (or controller that will own the <strong>UIWebView</strong>) <code>@property(nonatomic, strong) CMMotionManager *motionManager;</code></li>
<li>Finally, make the following calls:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">self.motionManager = [[CMMotionManager alloc] init];</div><div class="line">if (self.motionManager.isGyroAvailable &amp;&amp; !self.motionManager.isGyroActive) &#123;</div><div class="line">  [self.motionManager setGyroUpdateInterval:0.5f]; // Set the event update frequency (in seconds)</div><div class="line">  [self.motionManager startGyroUpdatesToQueue:NSOperationQueue.mainQueue</div><div class="line">                                  withHandler:^(CMGyroData *gyroData, NSError *error) &#123;</div><div class="line">    NSString *js = [NSString stringWithFormat:@&quot;parallax.onDeviceOrientation(&#123;beta:%f, gamma:%f&#125;)&quot;, gyroData.rotationRate.x, gyroData.rotationRate.y];</div><div class="line">    [self.parallaxWebView stringByEvaluatingJavaScriptFromString:js];</div><div class="line">  &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><blockquote>
<p>As a prerequisite, you will need <a href="http://gulpjs.com/" target="_blank" rel="external">gulp</a> installed: <code>npm install -g gulp</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install</div><div class="line">gulp</div></pre></td></tr></table></figure>
<p>During development you can have gulp watch the <code>source</code> directory for changes and automatically build the <code>deploy</code> files by running:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp watch</div></pre></td></tr></table></figure>
<h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>Matthew Wagerfield: <a href="http://twitter.com/wagerfield" target="_blank" rel="external">@wagerfield</a></p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Licensed under <a href="http://www.opensource.org/licenses/mit-license.php" target="_blank" rel="external">MIT</a>. Enjoy.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python 网易(MIT)公开课教程分享]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/16/python-%E7%BD%91%E6%98%93%E5%85%AC%E5%BC%80%E8%AF%BE%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/</url>
      <content type="html"><![CDATA[<p><a href="http://open.163.com/special/opencourse/bianchengdaolun.html" target="_blank" rel="external">麻省理工学院公开课：计算机科学及编程导论</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[http协议何时开启keep-alive(转)]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/14/http%E5%8D%8F%E8%AE%AE%E4%BD%95%E6%97%B6%E5%BC%80%E5%90%AFkeep-alive/</url>
      <content type="html"><![CDATA[<h4 id="在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。"><a href="#在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。" class="headerlink" title="在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。"></a>在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。</h4><blockquote>
<p>大家知道HTTP构建在TCP之上。在HTTP早期实现中，每个HTTP请求都要打开一个socket连接。这种做效率很低，因为一个Web 页面中的很多HTTP请求都指向同一个服务器。例如，很多为Web页面中的图片发起的请求都指向一个通用的图片服务器。持久连接的引入解决了多对已请求服务器导致的socket连接低效性的问题。它使浏览器可以再一个单独的连接上进行多个请求。浏览器和服务器使用Connection头里指出对Keep-Alive的支持。</p>
</blockquote>
<a id="more"></a>
<p>笔者在去年遇到一个跟<code>Keep-Alive</code>的问题：</p>
<p>问题现象： 一个JSP页面，居然要耗时40多秒。网页中有大量的图片的CSS</p>
<p>问题解决： 原因也找了半天，原来Apache配置里面，把Keep-Alive的开关关闭了。这个是个大问题，工程师为什么要关闭它，原来他考虑的太简单了，我们知道Apache适合处于短连接的请求，处理时间越短，并发数才能上去，原来他是这么考虑，但是没有办法，只能这样了，还是打开Keep-Alive开关吧。</p>
<p>当然，不是所有的情况都设置KeepAlive为On，下面的文字总结比较好：</p>
<p>【在使用apache的过程中，KeepAlive属性我一直保持为默认值On，其实，该属性设置为On还是Off还是要具体问题具体分析的，在生产环境中的影响还是蛮大的。</p>
<p>KeepAlive选项到底有什么用处？如果你用过Mysql ，应该知道Mysql的连接属性中有一个与KeepAlive 类似的Persistent Connection，即：长连接(PConnect)。该属性打开的话，可以使一次TCP连接为同一用户的多次请求服务，提高了响应速度。</p>
<p>比如很多网页中图片、CSS、JS、Html都在一台Server上，当用户访问其中的Html网页时，网页中的图片、Css、Js都构成了访问请求，打开KeepAlive 属性可以有效地降低TCP握手的次数(当然浏览器对同一域下同时请求的图片数有限制，一般是2)，减少httpd进程数，从而降低内存的使用(假定prefork模式)。MaxKeepAliveRequests 和KeepAliveTimeOut 两个属性在KeepAlive =On时起作用，可以控制持久连接的生存时间和最大服务请求数。</p>
<p>不过，上面说的只是一种情形，那就是静态网页居多的情况下，并且网页中的其他请求与网页在同一台Server上。当你的应用动态程序(比如：php )居多，用户访问时由动态程序即时生成html内容，html内容中图片素材和Css、Js等比较少或者散列在其他Server上时，KeepAlive =On反而会降低Apache 的性能。为什么呢？</p>
<p>前面提到过，KeepAlive =On时，每次用户访问，打开一个TCP连接，Apache 都会保持该连接一段时间，以便该连接能连续为同一client服务，在KeepAliveTimeOut还没到期并且MaxKeepAliveRequests还没到阈值之前，Apache 必然要有一个httpd进程来维持该连接，httpd进程不是廉价的，他要消耗内存和CPU时间片的。假如当前Apache 每秒响应100个用户访问，KeepAliveTimeOut=5，此时httpd进程数就是100<em>5=500个(prefork 模式)，一个httpd进程消耗5M内存的话，就是500</em>5M=2500M=2.5G，夸张吧？当然，Apache 与Client只进行了100次TCP连接。如果你的内存够大，系统负载不会太高，如果你的内存小于2.5G，就会用到Swap，频繁的Swap切换会加重CPU的Load。</p>
<p>现在我们关掉KeepAlive ，Apache 仍然每秒响应100个用户访问，因为我们将图片、js、css等分离出去了，每次访问只有1个request，此时httpd的进程数是100<em>1=100个，使用内存100</em>5M=500M，此时Apache 与Client也是进行了100次TCP连接。性能却提升了太多。</p>
<p>总结：</p>
<p>1、当你的Server内存充足时，KeepAlive =On还是Off对系统性能影响不大。</p>
<p>2、当你的Server上静态网页(Html、图片、Css、Js)居多时，建议打开KeepAlive 。</p>
<p>3、当你的Server多为动态请求(因为连接数据库，对文件系统访问较多)，KeepAlive 关掉，会节省一定的内存，节省的内存正好可以作为文件系统的Cache(vmstat命令中cache一列)，降低I/O压力。</p>
<p>PS：当KeepAlive =On时，KeepAliveTimeOut的设置其实也是一个问题，设置的过短，会导致Apache 频繁建立连接，给Cpu造成压力，设置的过长，系统中就会堆积无用的Http连接，消耗掉大量内存，具体设置多少，可以进行不断的调节，因你的网站浏览和服务器配置 而异。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python使用aiohttp异步框架编写web 并部署到centos上]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/13/%E4%BD%BF%E7%94%A8aiohttp%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6%E7%BC%96%E5%86%99web/</url>
      <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>web框架使用<code>aiohttp</code>,模板引擎<code>jinja2</code>,数据库操作使用<code>aiomysql</code>稍作封装的一个<code>ORM</code>(廖雪峰的教程上提供的 <a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014323389656575142d0bcfeec434e9639a80d3684a7da000" target="_blank" rel="external">编写ORM</a>)</p>
<a id="more"></a>
<h3 id="安装python3-5-2"><a href="#安装python3-5-2" class="headerlink" title="安装python3.5.2"></a>安装python3.5.2</h3><p><code>centos6.4</code>上自带了2.6的Python,YUM命令会依赖python 2.X，下面是安装python 3.5.X 的步骤</p>
<ul>
<li>wget –no-check-certificate <a href="http://mirrors.sohu.com/python/3.5.2/Python-3.5.2.tgz" target="_blank" rel="external">http://mirrors.sohu.com/python/3.5.2/Python-3.5.2.tgz</a></li>
<li>tar -zxvf Python-3.5.2.tgz</li>
<li>cd Python-3.5.2</li>
<li>./configure –prefix=/usr/local/python3.5 –enable-shared</li>
<li>make &amp;&amp; make install</li>
<li>ln -s /usr/local/python3.5/bin/python3 /usr/bin/python3</li>
<li>此时运行python3命令的话会报错，缺少.so文件，我们需要进行如下操作</li>
<li>cp -R /usr/local/python3.5/lib/* /usr/lib64/</li>
</ul>
<blockquote>
<p>安装python3.5.2的时候,会自动把<code>setuptools</code>和<code>pip</code>一起安装了</p>
</blockquote>
<h3 id="依赖库"><a href="#依赖库" class="headerlink" title="依赖库"></a>依赖库</h3><ul>
<li>/usr/bin/python3 -m pip install aiohttp_jinja2 –trusted-host pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install aiomysql –trusted-host * pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install aiohttp_session –trusted-host pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install cryptography –trusted-host pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install –upgrade pip –trusted-host pypi.douban.com</li>
</ul>
<blockquote>
<p>系统默认的python版本依然是2.6,运行pip 带上python3的路径即可。另外搜狐的镜像和豆瓣的资源，速度确实快。。。<code>aiohttp_session</code>会依赖<code>cryptography</code>库</p>
</blockquote>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>将编辑好的代码上传到服务器,<code>Xshell</code> 进入 <code>www</code> 目录,使用<code>nohup</code>命令后台运行..</p>
<ul>
<li><code>nohup /usr/bin/python3 app.py &amp;</code></li>
<li><code>exit</code><h4 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">upstream</span> python_app &#123;<span class="attribute">server</span> <span class="number">127.0.0.1:9000</span>;&#125;   </div><div class="line"><span class="section">server</span> &#123;</div><div class="line">  <span class="attribute">listen</span>       <span class="number">80</span>;</div><div class="line">  <span class="attribute">server_name</span>  test.wxwztj.com;</div><div class="line"></div><div class="line">  <span class="attribute">location</span> / &#123;</div><div class="line">  <span class="attribute">proxy_pass</span> http://python_app;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="attribute">location</span> <span class="regexp">~* .(gif|jpg|jpeg|png|css|js|ico)$</span> &#123;</div><div class="line">  <span class="attribute">root</span> /www/web/awesome-python3-webapp/www;</div><div class="line">  <span class="attribute">expires</span> <span class="number">1h</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>必须使用<code>exit</code>退出,直接断开或关闭Xshell,<code>nohup</code>的这条后台进程会挂掉。。。<br><code>nohup /usr/bin/python3 test.py &gt;/dev/null 2&gt;&amp;1 &amp;</code> 如果不想输出任何信息，可以在<code>nohup command</code> 后面加上<code>&gt;/dev/null 2&gt;&amp;1</code>,最后末尾加上<code>&amp;</code>结束,只输出错误日志并指定错误输出文件<code>nohup ./program &gt;/dev/null 2&gt;log &amp;</code> 文件名缺省则默认为<code>nohup.out</code>.</p>
</blockquote>
<p>界面使用<code>Uikit</code>和<code>Vue.js</code>.Vue的绑定感觉和Angularjs相似,<code>aiohttp</code>也可以编写<code>middleware</code>实现错误处理、验证登录、控制访问权限等。</p>
<h2 id="网站最后效果展示"><a href="#网站最后效果展示" class="headerlink" title="网站最后效果展示"></a><a href="http://python.wangchunjian.win/" target="_blank" rel="external">网站最后效果展示</a></h2><h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a><a href="http://blog.wangchunjian.win/2016/awesome-python3-webapp.zip">代码下载</a></h2><p><code>test.py</code>是入口文件,<code>app.py</code>以及其他文件是廖老师的demo。</p>
<p><code>orm</code>想使用<code>SQLAlchemy</code>异步编程的话,只能使用<code>aiomysql.sa</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"><span class="keyword">import</span> sqlalchemy <span class="keyword">as</span> sa</div><div class="line"><span class="keyword">from</span> sqlalchemy.types <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> func</div><div class="line"><span class="keyword">import</span> time,uuid,hashlib</div><div class="line"></div><div class="line"><span class="keyword">from</span> aiomysql.sa <span class="keyword">import</span> create_engine</div><div class="line"></div><div class="line"></div><div class="line">metadata=sa.MetaData()</div><div class="line"></div><div class="line"></div><div class="line">users = sa.Table(<span class="string">'users'</span>, metadata,</div><div class="line">               sa.Column(<span class="string">'id'</span>, Integer, primary_key=<span class="keyword">True</span>),</div><div class="line">               sa.Column(<span class="string">'email'</span>,String(<span class="number">50</span>)),</div><div class="line">               sa.Column(<span class="string">'passwd'</span>,String(<span class="number">50</span>)),</div><div class="line">               sa.Column(<span class="string">'image'</span>,String(<span class="number">500</span>)),</div><div class="line">               sa.Column(<span class="string">'admin'</span>,BOOLEAN),</div><div class="line">               sa.Column(<span class="string">'name'</span>, String(<span class="number">255</span>)),</div><div class="line">               sa.Column(<span class="string">'created_at'</span>,FLOAT())</div><div class="line">                 )</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_id</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'%015d%s000'</span> % (int(time.time() * <span class="number">1000</span>),uuid.uuid4().hex)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd_user</span><span class="params">(id,passwd)</span>:</span></div><div class="line">    sha1 = hashlib.sha1()</div><div class="line">    sha1.update(id.encode(<span class="string">'utf-8'</span>))</div><div class="line">    sha1.update(<span class="string">b':'</span>)</div><div class="line">    sha1.update(passwd.encode(<span class="string">'utf-8'</span>))</div><div class="line">    <span class="keyword">return</span> sha1.hexdigest()</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@asyncio.coroutine</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_pool</span><span class="params">(loop,**kw)</span>:</span></div><div class="line">    <span class="keyword">global</span> __pool</div><div class="line">    __pool = <span class="keyword">yield</span> <span class="keyword">from</span> create_engine(</div><div class="line">        host = kw.get(<span class="string">'host'</span>,<span class="string">'127.0.0.1'</span>),</div><div class="line">        port = kw.get(<span class="string">'port'</span>,<span class="number">3306</span>),</div><div class="line">        user = kw[<span class="string">'user'</span>],</div><div class="line">        password = kw[<span class="string">'password'</span>],</div><div class="line">        db = kw[<span class="string">'db'</span>],</div><div class="line">        charset = kw.get(<span class="string">'charset'</span>,<span class="string">'utf8'</span>),</div><div class="line">        autocommit = kw.get(<span class="string">'autocommit'</span>,<span class="keyword">True</span>),</div><div class="line">        maxsize = kw.get(<span class="string">'maxsize'</span>,<span class="number">10</span>),</div><div class="line">        minsize = kw.get(<span class="string">'minsize'</span>,<span class="number">1</span>),</div><div class="line">        loop = loop</div><div class="line">    )</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@asyncio.coroutine</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">go</span><span class="params">(in_loop)</span>:</span></div><div class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> create_pool(in_loop,user=<span class="string">'root'</span>,password=<span class="string">'root'</span>,db=<span class="string">'awesome'</span>)</div><div class="line">    <span class="keyword">global</span> __pool</div><div class="line">    <span class="keyword">with</span> (<span class="keyword">yield</span> <span class="keyword">from</span> __pool) <span class="keyword">as</span> conn:</div><div class="line">        user_id=next_id()</div><div class="line">        print(users.insert().values(name=<span class="string">'jinja2'</span>,id=user_id,passwd=pwd_user(user_id,<span class="string">'123456'</span>),</div><div class="line">                                                       email=<span class="string">'222@qq.com'</span>,image=<span class="string">'image:blank'</span>))</div><div class="line">        res = <span class="keyword">yield</span> <span class="keyword">from</span> conn.execute(users.select())</div><div class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> res:</div><div class="line">            print(row)</div><div class="line"></div><div class="line"></div><div class="line">loop=asyncio.get_event_loop()</div><div class="line">loop.run_until_complete(go(loop))</div><div class="line"></div><div class="line">__pool.close()</div><div class="line">loop.run_until_complete(__pool.wait_closed())</div><div class="line">loop.close()</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python metaclass django orm demo]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/09/06/python-metaclass-django-orm-demo/</url>
      <content type="html"><![CDATA[<p>一般情况下通过metaclass修改纯属变态，但是，总会遇到需要通过<code>metaclass</code>修改类定义的。<code>Diango</code>的<code>ORM</code>就是一个典型的例子。<br><a id="more"></a><br>ORM全称“Object Relational Mapping”，即对象-关系映射，就是把关系数据库的一行映射为一个对象，也就是一个类对应一个表，这样，写代码更简单，不用直接操作SQL语句。</p>
<p>要编写一个ORM框架，所有的类都只能动态定义，因为只有使用者才能根据表的结构定义出对应的类来。</p>
<p>让我们来尝试编写一个ORM框架。</p>
<p>编写底层模块的第一步，就是先把调用接口写出来。比如，使用者如果使用这个<code>ORM</code>框架，想定义一个<code>User</code>类来操作对应的数据库表<code>User</code>，我们期待他写出这样的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="string">'Simple ORM using metaclass'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Field</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,column_type)</span>:</span></div><div class="line">        self.name=name</div><div class="line">        self.column_type=column_type</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;%s:%s&gt;'</span> % (self.__class__.__name__,self.name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringField</span><span class="params">(Field)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></div><div class="line">        super(StringField,self).__init__(name,<span class="string">'varchar(100)'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntegerField</span><span class="params">(Field)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></div><div class="line">        super(IntegerField,self).__init__(name,<span class="string">'bigint'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelMetaclass</span><span class="params">(type)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls,name,bases,attrs)</span>:</span></div><div class="line">        <span class="keyword">if</span> name == <span class="string">'Model'</span>:</div><div class="line">            <span class="keyword">return</span> type.__new__(cls,name,bases,attrs)</div><div class="line">        print(<span class="string">'Found model: %s'</span> % name)</div><div class="line">        mappings = dict()</div><div class="line">        <span class="keyword">for</span> k,v <span class="keyword">in</span> attrs.items():</div><div class="line">            <span class="keyword">if</span> isinstance(v,Field):</div><div class="line">                print(<span class="string">'Found mapping: %s ===&gt; %s'</span> % (k,v))</div><div class="line">                mappings[k] = v</div><div class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> mappings.keys():</div><div class="line">            attrs.pop(k)</div><div class="line">        attrs[<span class="string">'__mappings__'</span>] = mappings</div><div class="line">        attrs[<span class="string">'__table__'</span>] = name</div><div class="line">        <span class="keyword">return</span> type.__new__(cls,name,bases,attrs)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span><span class="params">(dict,metaclass=ModelMetaclass)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,**kw)</span>:</span></div><div class="line">        super(Model,self).__init__(**kw)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="keyword">return</span> self[key]</div><div class="line">        <span class="keyword">except</span> KeyError:</div><div class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">r"'Model' object has no attribute '%s'"</span> % key)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, key, value)</span>:</span></div><div class="line">        self[key] = value</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></div><div class="line">        fields = []</div><div class="line">        params = []</div><div class="line">        args = []</div><div class="line">        <span class="keyword">for</span> k,v <span class="keyword">in</span> self.__mappings__.items():</div><div class="line">            fields.append(v.name)</div><div class="line">            params.append(<span class="string">'?'</span>)</div><div class="line">            args.append(getattr(self,k,<span class="keyword">None</span>))</div><div class="line">        sql = <span class="string">'insert into %s (%s) values (%s)'</span> % (self.__table__,<span class="string">','</span>.join(fields),<span class="string">','</span>.join(params))</div><div class="line">        print(<span class="string">'SQL: %s'</span> % sql)</div><div class="line">        print(<span class="string">'ARGS: %s'</span> % str(args))</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#testing code:</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(Model)</span>:</span></div><div class="line">    id=IntegerField(<span class="string">'id'</span>)</div><div class="line">    name=StringField(<span class="string">'username'</span>)</div><div class="line">    email=StringField(<span class="string">'email'</span>)</div><div class="line">    password=StringField(<span class="string">'pssword'</span>)</div><div class="line"></div><div class="line">u=User(id=<span class="number">12345</span>,name=<span class="string">'Michael'</span>,email=<span class="string">'test@orm.org'</span>,password=<span class="string">'my-pwd'</span>)</div><div class="line">u.save()</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[局域网arp攻击解决方法]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/08/19/%E5%B1%80%E5%9F%9F%E7%BD%91arp%E6%94%BB%E5%87%BB%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>路由器端和PC端  mac地址和ip双向绑定<br>win7,8,10等操作系统下以管理员身份运行命令行。<br><code>arp -a</code> , <code>netsh i i show in</code> , <code>netsh -c &quot;i i&quot; add ne 本地连接idx 路由器网关 路由器mac地址</code><br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&gt;arp -a</div><div class="line"></div><div class="line">接口: 172.17.3.1 --- 0x4</div><div class="line">  Internet 地址         物理地址              类型</div><div class="line">  172.17.3.2            44-04-44-b6-fb-6f     动态</div><div class="line">  172.17.3.5            6c-c2-6b-c6-52-8c     动态</div><div class="line">  172.17.3.6            f0-24-75-e5-d7-13     动态</div><div class="line">  172.17.255.255        ff-ff-ff-ff-ff-ff     静态</div><div class="line">  224.0.0.2             01-00-5e-00-00-02     静态</div><div class="line">  224.0.0.22            01-00-5e-00-00-16     静态</div><div class="line">  224.0.0.252           01-00-5e-00-00-fc     静态</div><div class="line">  225.3.25.179          01-00-5e-03-19-b3     静态</div><div class="line">  255.255.255.255       ff-ff-ff-ff-ff-ff     静态</div><div class="line"></div><div class="line">接口: 192.168.1.143 --- 0xb</div><div class="line">  Internet 地址         物理地址              类型</div><div class="line">  192.168.1.1           88-25-93-8b-15-c2     静态</div><div class="line">  192.168.1.86          40-8d-5c-ad-f9-18     动态</div><div class="line">  192.168.1.119         40-8d-5c-ad-ff-36     动态</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;netsh i i show in</div><div class="line"></div><div class="line">Idx     Met         MTU          状态                名称</div><div class="line">---  ----------  ----------  ------------  ---------------------------</div><div class="line">  4          25        1500  connected     WLAN</div><div class="line">  1          50  4294967295  connected     Loopback Pseudo-Interface 1</div><div class="line"> 11          20        1500  connected     以太网</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;netsh -c &quot;i i&quot; add ne 11 192.168.1.1 88-25-93-8b-15-c2</div><div class="line"></div><div class="line">对象已存在。</div></pre></td></tr></table></figure>
<p>重复添加会提示对象已存在,添加成功没有提示。</p>
<p>add ne <code>11</code> .. 11是运行<code>netsh i i show in</code>的<code>以太网</code>的idx。<br>192.168.1.1是路由器网关   88-25-93-8b-15-c2是路由器mac地址</p>
<p>中间有遇到个别电脑 系统环境变量被修改  出现 <code>arp不是内部命令</code><br>在高级-环境变量的PATH 值后添加<code>%SystemRoot%\system32;</code></p>
<h3 id="XP系统运行如下命令"><a href="#XP系统运行如下命令" class="headerlink" title="XP系统运行如下命令"></a>XP系统运行如下命令</h3><p><code>arp -s 192.168.1.1 88-25-93-8b-15-c2</code></p>
<h3 id="路由器端设置寻找下面项目即可"><a href="#路由器端设置寻找下面项目即可" class="headerlink" title="路由器端设置寻找下面项目即可"></a>路由器端设置寻找下面项目即可</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">IP与MAC绑定</div><div class="line"></div><div class="line">  静态ARP绑定设置</div><div class="line"></div><div class="line">  ARP映射表</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用composer搭建slim framework mvc demo]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/07/28/%E4%BD%BF%E7%94%A8composer%E6%90%AD%E5%BB%BAmvc-demo/</url>
      <content type="html"><![CDATA[<p>使用<code>composer dump-autoload</code>生成autoload文件,自动加载编写的<code>models</code>和<code>controllers</code>.达到<code>MVC</code>分层的目的。当然使用<code>spl_autoload</code>也可以实现自动加载类，但是本人的服务器环境中,使用spl_autoload命名空间会失效…</p>
<a id="more"></a>
<h3 id="安装slim-和-twig-view-以及-Eloquent-fa-hand-o-down"><a href="#安装slim-和-twig-view-以及-Eloquent-fa-hand-o-down" class="headerlink" title="安装slim 和 twig-view  以及 Eloquent:fa-hand-o-down:"></a>安装slim 和 twig-view  以及 Eloquent:fa-hand-o-down:</h3><p><img src="http://www2.wxwztj.com/uploads/1607/20160719183507_123.png" alt="composer 安装slim" title="在这里输入图片标题"><br><img src="http://www2.wxwztj.com/uploads/1607/20160719183954_641.png" alt="composer 安装twig-view" title="在这里输入图片标题"></p>
<h3 id="使用composer-autoload-加载自己的-文件"><a href="#使用composer-autoload-加载自己的-文件" class="headerlink" title="使用composer autoload 加载自己的 文件"></a>使用composer autoload 加载自己的 文件</h3><p><a href="https://getcomposer.org/doc/03-cli.md#dump-autoload" target="_blank" rel="external">https://getcomposer.org/doc/03-cli.md#dump-autoload</a></p>
<p><img src="http://www2.wxwztj.com/uploads/1607/20160719201442_251.png" alt="composer配置autoload的文件夹和namespace" title="在这里输入图片标题"></p>
<p>运行如下命令<code>php composer.phar dump-autoload</code>   windows环境直接<code>composer dump-autoload</code><br>下面是我自己新建的目录结构<br><img src="http://www2.wxwztj.com/uploads/1607/20160719201940_676.png" alt="输入图片说明" title="在这里输入图片标题"></p>
<h3 id="index-php-文件"><a href="#index-php-文件" class="headerlink" title="index.php 文件"></a>index.php 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">require &apos;../vendor/autoload.php&apos;;</div><div class="line"></div><div class="line">$app = new Slim\App(</div><div class="line">    new \Slim\Container(</div><div class="line">        include &apos;../core/container.config.php&apos;</div><div class="line">    )</div><div class="line">);</div><div class="line"></div><div class="line">$app-&gt;get(&apos;/&apos;,&apos;Core\Controller\Test&apos;);</div><div class="line">// Render Twig template in route</div><div class="line">$app-&gt;get(&apos;/hello/&#123;name&#125;&apos;, function ($request, $response, $args) &#123;</div><div class="line">    return $this-&gt;view-&gt;render($response, &apos;profile.html&apos;, [</div><div class="line">        &apos;name&apos; =&gt; $args[&apos;name&apos;]</div><div class="line">    ]);</div><div class="line">&#125;)-&gt;setName(&apos;profile&apos;);</div><div class="line"></div><div class="line">$app-&gt;run();</div></pre></td></tr></table></figure>
<h3 id="container-config-php"><a href="#container-config-php" class="headerlink" title="container.config.php"></a>container.config.php</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">return [</div><div class="line">    &apos;settings&apos; =&gt; [</div><div class="line">        &apos;viewTemplatesDirectory&apos; =&gt; &apos;../core/views&apos;,</div><div class="line">        &apos;compilation_cache&apos;=&gt;&apos;../core/caches&apos;,</div><div class="line">        &apos;determineRouteBeforeAppMiddleware&apos; =&gt; false,</div><div class="line">        &apos;displayErrorDetails&apos; =&gt; true,</div><div class="line">        &apos;db&apos; =&gt; [</div><div class="line">            &apos;driver&apos; =&gt; &apos;mysql&apos;,</div><div class="line">            &apos;host&apos; =&gt; &apos;localhost&apos;,</div><div class="line">            &apos;database&apos; =&gt; &apos;note&apos;,</div><div class="line">            &apos;username&apos; =&gt; &apos;root&apos;,</div><div class="line">            &apos;password&apos; =&gt; &apos;&apos;,</div><div class="line">            &apos;charset&apos;   =&gt; &apos;utf8&apos;,</div><div class="line">            &apos;collation&apos; =&gt; &apos;utf8_unicode_ci&apos;,</div><div class="line">            &apos;prefix&apos;    =&gt; &apos;&apos;,</div><div class="line">        ]</div><div class="line">    ],</div><div class="line">    &apos;view&apos; =&gt; function ($c) &#123;</div><div class="line">    	$view = new \Slim\Views\Twig($c[&apos;settings&apos;][&apos;viewTemplatesDirectory&apos;], [</div><div class="line">        	&apos;cache&apos; =&gt; $c[&apos;settings&apos;][&apos;compilation_cache&apos;],</div><div class="line">        	//&apos;cache&apos; =&gt; false,</div><div class="line">    	]);</div><div class="line">    	$view-&gt;addExtension(new \Slim\Views\TwigExtension(</div><div class="line">        	$c[&apos;router&apos;],</div><div class="line">        	$c[&apos;request&apos;]-&gt;getUri()</div><div class="line">    	));</div><div class="line">        return $view;</div><div class="line">    &#125;,</div><div class="line">    &apos;db&apos;=&gt;function($c)&#123;</div><div class="line">    	$capsule = new \Illuminate\Database\Capsule\Manager;</div><div class="line">    	$capsule-&gt;addConnection($c[&apos;settings&apos;][&apos;db&apos;]);</div><div class="line"></div><div class="line">    	$capsule-&gt;setAsGlobal();</div><div class="line">    	$capsule-&gt;bootEloquent();</div><div class="line"></div><div class="line">    	return $capsule;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">];</div></pre></td></tr></table></figure>
<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">namespace Core\Controller;</div><div class="line"></div><div class="line">class Test&#123;</div><div class="line">	private $view;</div><div class="line">    private $db;</div><div class="line"></div><div class="line">	function __construct($ci)&#123;		</div><div class="line">		$this-&gt;view=$ci[&apos;view&apos;];</div><div class="line">		$this-&gt;db=$ci[&apos;db&apos;];</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public function __invoke($request,$response,$args)</div><div class="line">    &#123;</div><div class="line">        $table=$this-&gt;db-&gt;table(&apos;note&apos;);</div><div class="line">        $notes=$table-&gt;get();</div><div class="line">        return $this-&gt;view-&gt;render($response,&apos;notes.html&apos;,[&apos;notes&apos;=&gt;$notes]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>模板文件省略。。。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[slimframwork 使用 middleware缓存页面]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/07/27/hello-world/</url>
      <content type="html"><![CDATA[<p><img src="http://www2.wxwztj.com/uploads/1607/20160721162022_546.jpg" alt="slim cache middleware" title="slim cache middleware"></p>
<p>中间件 <code>Core\Middleware\Cache</code></p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">namespace Core\Middleware;</div><div class="line">class Cache</div><div class="line">&#123;</div><div class="line">    protected $db;</div><div class="line">    //Constructor</div><div class="line">    public function __construct($db) &#123;</div><div class="line">       $this-&gt;db = $db;</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * Example middleware invokable class</div><div class="line">     *</div><div class="line">     * @param  \Psr\Http\Message\ServerRequestInterface $request  PSR7 request</div><div class="line">     * @param  \Psr\Http\Message\ResponseInterface      $response PSR7 response</div><div class="line">     * @param  callable                                 $next     Next middleware</div><div class="line">     *</div><div class="line">     * @return \Psr\Http\Message\ResponseInterface</div><div class="line">     */</div><div class="line">    public function __invoke($request, $response, $next)</div><div class="line">    &#123;</div><div class="line">        $path = $request-&gt;getUri()-&gt;getPath();</div><div class="line">        $query= $request-&gt;getUri()-&gt;getQuery();</div><div class="line">        if(!empty($query))&#123;</div><div class="line">            $path.='?'.$query;</div><div class="line">        &#125;</div><div class="line">        $cachetime=time()-60; //获取60s内的缓存</div><div class="line">        $cache=$this-&gt;db-&gt;get('cache','*',['AND'=&gt;['path'=&gt;$path,'created_at[&gt;]'=&gt;$cachetime]]);</div><div class="line">        if($cache)&#123;</div><div class="line">             $t2=microtime(true);</div><div class="line">             $response-&gt;getBody()-&gt;write(htmlspecialchars_decode($cache['body']).</div><div class="line">             '&lt;!--cached at'.date("Y/m/d H:i:s",$cache['created_at']).'--&gt;</div><div class="line">             &lt;!--app cost time '.(round(($t2-APP_START),5)*1000).'ms--&gt;');</div><div class="line">             return $response;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $response = $next($request, $response);</div><div class="line"></div><div class="line">        if ($response-&gt;getStatusCode() == 200) &#123;</div><div class="line">            $id=$this-&gt;db-&gt;get('cache','id',['path'=&gt;$path]);</div><div class="line">            $cachebody=htmlspecialchars($response-&gt;getBody());</div><div class="line">            $data=['path'=&gt;$path,'body'=&gt;$cachebody,'created_at'=&gt;time()];</div><div class="line">            if($id)&#123;</div><div class="line">                $this-&gt;db-&gt;update('cache',$data,['id'=&gt;$id]);</div><div class="line">            &#125;else&#123;</div><div class="line">                $this-&gt;db-&gt;insert('cache',$data);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        $t2=microtime(true);</div><div class="line">        $response-&gt;getBody()-&gt;write('&lt;!--no cache app cost time '</div><div class="line">        .(round(($t2-APP_START),5)*1000).'ms--&gt;');</div><div class="line">        return $response;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###入口文件index.php调用<code>cache</code>缓存中间件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">define(<span class="string">'APP_START'</span>,microtime(<span class="keyword">true</span>));</div><div class="line"><span class="keyword">require</span> <span class="string">'../vendor/autoload.php'</span>;</div><div class="line">$app = <span class="keyword">new</span> Slim\App(</div><div class="line">    <span class="keyword">new</span> \Slim\Container(</div><div class="line">        <span class="keyword">include</span> <span class="string">'../core/container.config.php'</span></div><div class="line">    )</div><div class="line">);</div><div class="line">$app-&gt;group(<span class="string">'/blog'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;get(<span class="string">'[/&#123;slug&#125;]'</span>, <span class="string">'BlogController'</span>)-&gt;setName(<span class="string">'blog'</span>);</div><div class="line">    <span class="keyword">$this</span>-&gt;get(<span class="string">'/article/&#123;id:[0-9]+&#125;'</span>, <span class="string">'BlogController:article'</span>)-&gt;setName(<span class="string">'blog.post'</span>);</div><div class="line">&#125;)-&gt;add(<span class="keyword">new</span> Core\Middleware\Cache());</div></pre></td></tr></table></figure></p>
<p>###缓存的话,建议使用redis,memcache 下面是使用memcache来缓存的代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?php</span></span></div><div class="line"><span class="keyword">namespace</span> <span class="title">Core</span>\<span class="title">Middleware</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cache</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Example middleware invokable class</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span>  \Psr\Http\Message\ServerRequestInterface $request  PSR7 request</div><div class="line">     * <span class="doctag">@param</span>  \Psr\Http\Message\ResponseInterface      $response PSR7 response</div><div class="line">     * <span class="doctag">@param</span>  callable                                 $next     Next middleware</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> \Psr\Http\Message\ResponseInterface</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">($request, $response, $next)</span></span></div><div class="line">    &#123;</div><div class="line">        $path = $request-&gt;getUri()-&gt;getPath();</div><div class="line">        $query= $request-&gt;getUri()-&gt;getQuery();</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($query))&#123;</div><div class="line">            $path.=<span class="string">'?'</span>.$query;</div><div class="line">        &#125;</div><div class="line">        $memcache_obj = memcache_connect(<span class="string">"127.0.0.1"</span>, <span class="number">11211</span>);</div><div class="line">        $cache=$memcache_obj-&gt;get($path);</div><div class="line">        <span class="keyword">if</span>($cache)&#123;</div><div class="line">             $t2=microtime(<span class="keyword">true</span>);</div><div class="line">             $response-&gt;getBody()-&gt;write(htmlspecialchars_decode($cache));</div><div class="line">             <span class="keyword">return</span> $response;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $response = $next($request, $response);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ($response-&gt;getStatusCode() == <span class="number">200</span>) &#123;</div><div class="line"></div><div class="line">            $cachebody=htmlspecialchars($response-&gt;getBody());</div><div class="line">            $memcache_obj-&gt;set($path,$cachebody,<span class="keyword">false</span>,<span class="number">60</span>);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        $t2=microtime(<span class="keyword">true</span>);</div><div class="line">        $response-&gt;getBody()-&gt;write(<span class="string">'&lt;!--with no memcache app cost time </span></div><div class="line">        '.(round(($t2-APP_START),<span class="number">5</span>)*<span class="number">1000</span>).<span class="string">'ms--&gt;'</span>);</div><div class="line">        <span class="keyword">return</span> $response;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>没怎么使用过<code>memcache</code>,不过看说明是使用connect连接的,程序执行完,连接会自动关闭.</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用hexo搭建博客 nginx代理nodejs]]></title>
      <url>http://blog.wangchunjian.win/blog/2016/07/27/test-new-Post/</url>
      <content type="html"><![CDATA[<p>假设hexo已经搭建完成,并且<code>hexo server</code>可以正常运行</p>
<p>nginx下站点配置文件<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">upstream</span> node_app &#123;</div><div class="line"><span class="attribute">server</span> <span class="number">127.0.0.1:4000</span>;</div><div class="line">&#125;</div><div class="line">   </div><div class="line"><span class="section">server</span> &#123;</div><div class="line"><span class="attribute">listen</span>       <span class="number">80</span>;</div><div class="line"><span class="attribute">server_name</span>  blog.wangchunjian.win;</div><div class="line"></div><div class="line"><span class="attribute">location</span> / &#123;</div><div class="line">  <span class="attribute">proxy_pass</span> http://node_app;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="attribute">location</span> <span class="regexp">~* .(gif|jpg|jpeg|png|css|js|ico)$</span> &#123;</div><div class="line">  <span class="attribute">root</span> /www/web/nodejs/test/public;</div><div class="line">  <span class="attribute">expires</span> <span class="number">1h</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>使用<code>nohup</code>后台运行<code>hexo</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup hexo server &amp;</div></pre></td></tr></table></figure></p>
<p><img src="http://img.wxwztj.com/ckfinder/userfiles/files/nohup-hexo.jpg" alt="nohup command" title="nohup command"></p>
<blockquote>
<p>必须使用<code>exit</code>退出,不然nohup的session会中断</p>
</blockquote>
<p>安装<code>hexo_admin</code>后会发现无法加载css 和 js ,但是访问4000端口是可以加载的,所以手动把缺的文件拷贝了一份到 public/admin文件夹下。源文件在<code>/www/web/nodejs/test/node_modules/hexo-admin/www</code>下。</p>
<p>使用nginx加载静态资源会快一些，还可以设置缓存时间。。。</p>
]]></content>
    </entry>
    
  
  
</search>
