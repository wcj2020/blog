<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王纯建的博客</title>
  <subtitle>hexo搭建</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nodejs.wxwztj.com/"/>
  <updated>2018-01-09T08:12:52.642Z</updated>
  <id>http://nodejs.wxwztj.com/</id>
  
  <author>
    <name>wcj2020</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IIS FTP连接报530User cannot logged in</title>
    <link href="http://nodejs.wxwztj.com/2018/01/09/IIS-FTP%E8%BF%9E%E6%8E%A5%E6%8A%A5530User-cannot-logged-in/"/>
    <id>http://nodejs.wxwztj.com/2018/01/09/IIS-FTP连接报530User-cannot-logged-in/</id>
    <published>2018-01-09T08:10:51.000Z</published>
    <updated>2018-01-09T08:12:52.642Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>server2003</code>新建ftp用户并开启<code>IIS</code>的<code>Ftp</code>功能之后，有时在连接这个ftp的时候会出现<code>530 User 用户名 cannot login home directory inaccessible</code>的错误，网上一般的解决方法是ftp目录是否存在，用户权限是否设置正确等等。但是经常是这些都是设置正确的，却还是出现这样的错误提示。</p>
<p>　　其实原因是在新建IIS-FTP的时候选择了<code>隔离用户</code>，而在你选择的FTP文件夹却和这个用户相关的文件夹不同，所以自然就会出现这个提示，而找不到解决方法了。</p>
<p>　　这个就涉及到<code>server 2003</code>的FTP文件夹的设定和命名有相当严格的规范。</p>
<p>　　举个例子，如果你想为用户abc在<code>server 2003</code>下开通一个<code>IIS-FTP</code>服务目录设定为<code>E：\\FTP</code>里。除了安装IIS和FTP组件及相关配置正确之外，你还应该在FTP文件夹中建立一个子文件夹。命名为<code>LocalUser</code>，然后在LocalUser文件夹中再建立一个子文件夹，命名为abc，即你要开通FTP服务的用户名。</p>
<p>　　这样当用户<code>abc</code>运行<code>FTP</code>服务登录到<code>server2003</code>时，会自动进入到<code>E：\\FTP\\LocalUser\\abc</code>文件夹目录下，这也就很好解释为什么最初会报出<code>530 User用户名 cannot log in home directory inaccessible</code>的错误了。因为不这样设定的话<code>E：\\FTP\\LocalUser\\abc</code>的目录根本就不存在。</p>
<p>　　另外如果我们打算允许FTP站点提供匿名登录的话，还应在<code>LocalUser</code>目录下另建一个public的子目录。同理，匿名登录的用户将自动进入到<code>D：\\FTP\\LocalUser\\public</code>目录中。</p>
<p>　　这样设置对一个服务器多个人使用的情况下非常有用，除此之外，你还可以在IIS中设置每个FTP对应的网站的流量，连接数等等限制来合理分配服务器资源。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;code&gt;server2003&lt;/code&gt;新建ftp用户并开启&lt;code&gt;IIS&lt;/code&gt;的&lt;code&gt;Ftp&lt;/code&gt;功能之后，有时在连接这个ftp的时候会出现&lt;code&gt;530 User 用户名 cannot login home directory in
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FTP端口范围修改</title>
    <link href="http://nodejs.wxwztj.com/2017/12/26/FTP%E7%AB%AF%E5%8F%A3%E8%8C%83%E5%9B%B4%E4%BF%AE%E6%94%B9/"/>
    <id>http://nodejs.wxwztj.com/2017/12/26/FTP端口范围修改/</id>
    <published>2017-12-26T01:21:22.000Z</published>
    <updated>2017-12-26T01:23:16.170Z</updated>
    
    <content type="html"><![CDATA[<p>由于云主机端口可使用范围 需要修改PureFtpd的端口范围 默认的 20000:20500  修改为  20000 20030<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">#</div><div class="line"># pure-ftpd.conf</div><div class="line"># http://www.wdlinux.cn</div><div class="line">Bind			21</div><div class="line">ChrootEveryone              yes</div><div class="line">BrokenClientsCompatibility  no</div><div class="line">MaxClientsNumber            50</div><div class="line">Daemonize                   yes</div><div class="line">MaxClientsPerIP             8</div><div class="line">VerboseLog                  no</div><div class="line">DisplayDotFiles             yes</div><div class="line">AnonymousOnly               no</div><div class="line">NoAnonymous                 yes</div><div class="line">SyslogFacility              ftp</div><div class="line">DontResolve                 yes</div><div class="line">MaxIdleTime                 15</div><div class="line">LimitRecursion              10000 8</div><div class="line">AnonymousCanCreateDirs      no</div><div class="line">MaxLoad                     4</div><div class="line">AntiWarez                   yes</div><div class="line">Umask                       133:022</div><div class="line">MinUID                      100</div><div class="line">AllowUserFXP                no</div><div class="line">AllowAnonymousFXP           no</div><div class="line">ProhibitDotFilesWrite       no</div><div class="line">ProhibitDotFilesRead        no</div><div class="line">AutoRename                  no</div><div class="line">AnonymousCantUpload         no</div><div class="line">MaxDiskUsage               99</div><div class="line">CustomerProof              yes</div><div class="line">AllowOverwrite             on</div><div class="line">AllowStoreRestart          on</div><div class="line">UnixAuthentication          yes</div><div class="line">PassivePortRange            20000 20030</div><div class="line">PureDB			/www/wdlinux/pureftpd/etc/pureftpd.pdb</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于云主机端口可使用范围 需要修改PureFtpd的端口范围 默认的 20000:20500  修改为  20000 20030&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;d
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>快商通代码</title>
    <link href="http://nodejs.wxwztj.com/2017/12/21/%E5%BF%AB%E5%95%86%E9%80%9A%E4%BB%A3%E7%A0%81/"/>
    <id>http://nodejs.wxwztj.com/2017/12/21/快商通代码/</id>
    <published>2017-12-21T06:42:13.000Z</published>
    <updated>2017-12-21T06:48:47.444Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> openZoosUrl = <span class="function"><span class="keyword">function</span>(<span class="params">text, isMobile</span>) </span>&#123;</div><div class="line">    <span class="comment">//请替换成"电脑生成代码 - 链接地址" 中的链接地址,不要去其他地方复制</span></div><div class="line">    ksChatLink = <span class="string">'https://hztk5.kuaishang.cn/bs/im.htm?cas=59076___799223&amp;fi=67689&amp;ism=1'</span>;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 若强行打开新窗口,则放开设置,不设置则手机不打开新窗口,pc打开新窗口,此设置只对当前自定义事件有效</div><div class="line">     * 若想全局生效,包括快商通默认的打开聊天窗口事件,则将此变量ksUserDefinedOpenNewChatWin定义在ks.j前即可</div><div class="line">     */</div><div class="line">    <span class="keyword">var</span> ksUserDefinedOpenNewChatWin = <span class="literal">true</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkQueryString</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!a) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + b + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>, <span class="string">"i"</span>).test(a)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getQueryString</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> c = a.indexOf(<span class="string">'?'</span>);</div><div class="line">        <span class="keyword">if</span> (c == <span class="number">-1</span>) <span class="keyword">return</span> <span class="string">''</span>;</div><div class="line">        a = a.substr(c + <span class="number">1</span>, a.length);</div><div class="line">        <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + b + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>, <span class="string">"i"</span>);</div><div class="line">        <span class="keyword">var</span> r = a.match(d);</div><div class="line">        <span class="keyword">if</span> (r != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (isMobile &amp;&amp; ksChatLink.indexOf(<span class="string">'ism=1'</span>) == <span class="number">-1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (ksChatLink.indexOf(<span class="string">'?'</span>) == <span class="number">-1</span>) &#123;</div><div class="line">            ksChatLink += <span class="string">'?ism=1'</span></div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            ksChatLink += <span class="string">'&amp;ism=1'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> openNewChatWin, _ksChatLink = ksChatLink;</div><div class="line">    <span class="keyword">var</span> localArr = ksChatLink.split(<span class="string">"?"</span>);</div><div class="line">    localArr.push(<span class="string">""</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> ksUserDefinedOpenNewChatWin != <span class="string">'undefined'</span> &amp;&amp; ksUserDefinedOpenNewChatWin == <span class="literal">true</span>) &#123;</div><div class="line">        openNewChatWin = <span class="literal">true</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (checkQueryString(localArr[<span class="number">1</span>], <span class="string">'ism'</span>)) &#123;</div><div class="line">        openNewChatWin = <span class="literal">false</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        openNewChatWin = <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ksOpenLink</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> a = <span class="string">''</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">var</span> b = getQueryString(ksChatLink, <span class="string">'cas'</span>);</div><div class="line">            <span class="keyword">if</span> (b) &#123;</div><div class="line">                <span class="keyword">var</span> c = <span class="string">''</span>;</div><div class="line">                <span class="keyword">var</span> d = <span class="built_in">document</span>.cookie.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(^| )'</span> + b + <span class="string">'_KS_'</span> + b + <span class="string">'=([^;]*)(;|$)'</span>));</div><div class="line">                <span class="keyword">if</span> (d != <span class="literal">null</span>) &#123;</div><div class="line">                    c = <span class="built_in">unescape</span>(d[<span class="number">2</span>])</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (c) &#123;</div><div class="line">                    a += <span class="string">'&amp;vi='</span> + c</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (e) &#123;&#125;</div><div class="line">        <span class="keyword">var</span> f = <span class="string">""</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (opener.document.referrer.length &gt; <span class="number">0</span>) &#123;</div><div class="line">                f = opener.document.referrer</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">            f = <span class="built_in">document</span>.referrer</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (!f || f.length == <span class="number">0</span>) &#123;</div><div class="line">            f = <span class="built_in">document</span>.referrer</div><div class="line">        &#125;</div><div class="line">        a += <span class="string">'&amp;dp='</span> + <span class="built_in">encodeURIComponent</span>(<span class="built_in">window</span>.location.href);</div><div class="line">        <span class="keyword">if</span> (f) a += <span class="string">'&amp;ref='</span> + <span class="built_in">encodeURIComponent</span>(f);</div><div class="line">        <span class="keyword">if</span> (text) a += <span class="string">'&amp;sText='</span> + <span class="built_in">encodeURIComponent</span>(text);</div><div class="line">        <span class="keyword">if</span> (ksChatLink.indexOf(<span class="string">'?'</span>) == <span class="number">-1</span>) &#123;</div><div class="line">            a = <span class="string">'?'</span> + a.substring(<span class="number">1</span>)</div><div class="line">        &#125;</div><div class="line">        ksChatLink += a;</div><div class="line">        <span class="keyword">if</span> (!openNewChatWin) &#123;</div><div class="line">            <span class="built_in">window</span>.location.href = ksChatLink</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">var</span> g = <span class="built_in">window</span>.open(ksChatLink, <span class="string">'_blank'</span>);</div><div class="line">            <span class="keyword">if</span> (g) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    g.focus()</div><div class="line">                &#125; <span class="keyword">catch</span> (e) &#123;&#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="built_in">window</span>.location.href = ksChatLink</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> KS != <span class="string">'undefined'</span>) &#123;</div><div class="line">        <span class="keyword">var</span> p = &#123;&#125;;</div><div class="line">        <span class="keyword">if</span> (text) p[<span class="string">'sText'</span>] = text;</div><div class="line">        <span class="keyword">if</span> (openNewChatWin) p[<span class="string">'oTarget'</span>] = <span class="string">'_blank'</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> KS.openChatWin == <span class="string">'function'</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (openNewChatWin &amp;&amp; _ksChatLink.indexOf(<span class="string">'kuaishang'</span>) == <span class="number">-1</span> &amp;&amp; !KS.customUrl) &#123;</div><div class="line">                    KS.customUrl = _ksChatLink</div><div class="line">                &#125;</div><div class="line">                KS.openChatWin(p)</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> KS.openChatLink == <span class="string">'function'</span>) &#123;</div><div class="line">                KS.openChatLink(p)</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                ksOpenLink()</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">            ksOpenLink()</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        ksOpenLink()</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决wdCP升级至v3.2.19(20171026) 打不开，显示空白问题</title>
    <link href="http://nodejs.wxwztj.com/2017/12/15/%E8%A7%A3%E5%86%B3wdCP%E5%8D%87%E7%BA%A7%E8%87%B3v3-2-19-20171026-%E6%89%93%E4%B8%8D%E5%BC%80%EF%BC%8C%E6%98%BE%E7%A4%BA%E7%A9%BA%E7%99%BD%E9%97%AE%E9%A2%98/"/>
    <id>http://nodejs.wxwztj.com/2017/12/15/解决wdCP升级至v3-2-19-20171026-打不开，显示空白问题/</id>
    <published>2017-12-15T01:25:00.000Z</published>
    <updated>2017-12-15T01:28:43.568Z</updated>
    
    <content type="html"><![CDATA[<h4 id="升级wdCP到v3-2-19-20171026-，打不开管理后台，使用以下命令重启："><a href="#升级wdCP到v3-2-19-20171026-，打不开管理后台，使用以下命令重启：" class="headerlink" title="升级wdCP到v3.2.19(20171026)，打不开管理后台，使用以下命令重启："></a>升级wdCP到v3.2.19(20171026)，打不开管理后台，使用以下命令重启：</h4><p><code>sh /www/wdlinux/wdcp/shell/cr7.sh &amp;&amp; service wdcp restart</code></p>
<h4 id="执行结果："><a href="#执行结果：" class="headerlink" title="执行结果："></a>执行结果：</h4><p><code>Restarting wdcp (via systemctl):                           [  OK  ]</code></p>
<p>表示重启成功，刷新即可打开登陆页面。</p>
<p>注：直接使用service wdapache start|stop|restart命令，经测试无效。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;升级wdCP到v3-2-19-20171026-，打不开管理后台，使用以下命令重启：&quot;&gt;&lt;a href=&quot;#升级wdCP到v3-2-19-20171026-，打不开管理后台，使用以下命令重启：&quot; class=&quot;headerlink&quot; title=&quot;升级wdCP到v
    
    </summary>
    
    
      <category term="wdcp" scheme="http://nodejs.wxwztj.com/tags/wdcp/"/>
    
  </entry>
  
  <entry>
    <title>wdcp环境php安装yaf扩展</title>
    <link href="http://nodejs.wxwztj.com/2017/02/07/wdcp%E7%8E%AF%E5%A2%83php%E5%AE%89%E8%A3%85yaf%E6%89%A9%E5%B1%95/"/>
    <id>http://nodejs.wxwztj.com/2017/02/07/wdcp环境php安装yaf扩展/</id>
    <published>2017-02-07T08:27:00.000Z</published>
    <updated>2017-02-07T08:38:42.286Z</updated>
    
    <content type="html"><![CDATA[<p><code>CentOS release 6.5 (Final) 64位</code><br><code>wdCP v3.0.8</code></p>
<h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><p>确定系统已经安装了gcc、gcc-c++、make、automake、autoconf等依赖库，如果之前装好了PHP那么这些依赖应该都有了，推荐用yum管理安装php环境。</p>
<p>可以获取到yaf包的途径：</p>
<p>1 Yaf其实算是PHP官方的一个扩展，我们可以直接在PHP官网下载。 <a href="http://pecl.php.NET/package/yaf" target="_blank" rel="external">http://pecl.php.NET/package/yaf</a></p>
<p>2 Git 仓库 <a href="https://github.com/laruence/php-yaf" target="_blank" rel="external">https://github.com/laruence/php-yaf</a></p>
<p>yaf官方文档 ：<a href="http://www.laruence.com/manual/" target="_blank" rel="external">http://www.laruence.com/manual/</a></p>
<p>安装：</p>
<p>从官网下载的新一点的版本会比较稳定，安装也会比较顺畅，老版本有时候安到半截如果你的环境配的不全或者路径有问题，需要做一些调试,，我们这里下载官网的最新2.3.3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget http://pecl.php.net/get/yaf-2.3.3.tgz</div><div class="line">tar -zxvf yaf-2.3.3* &amp;&amp; cd yaf-2.3.3</div><div class="line">/www/wdlinux/php/bin/phpize</div><div class="line">./configure --with-php-config=/usr/bin/php-config &amp;&amp; make &amp;&amp; make test  </div><div class="line">make install</div></pre></td></tr></table></figure>
<p>期间安装2.2.9版本出现 yaf_config.lo 错误<br><code>/yaf-2.2.9/yaf_config.c:227: error: ?.S_CONSTANT_ARRAY?.undeclared (first use in this function)
make: *** [yaf_config.lo] Error</code></p>
<p>3.0.4版本也出现错误,不知是没有 make &amp;&amp; make test 还是版本的原因。</p>
<p>不过2.3.3安装成功了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;CentOS release 6.5 (Final) 64位&lt;/code&gt;&lt;br&gt;&lt;code&gt;wdCP v3.0.8&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;准备工作：&quot;&gt;&lt;a href=&quot;#准备工作：&quot; class=&quot;headerlink&quot; title=&quot;准备工
    
    </summary>
    
      <category term="yaf" scheme="http://nodejs.wxwztj.com/categories/yaf/"/>
    
    
  </entry>
  
  <entry>
    <title>解决Firefox不信任StartSSL证书问题</title>
    <link href="http://nodejs.wxwztj.com/2017/02/04/%E8%A7%A3%E5%86%B3Firefox%E4%B8%8D%E4%BF%A1%E4%BB%BBStartSSL%E8%AF%81%E4%B9%A6%E9%97%AE%E9%A2%98/"/>
    <id>http://nodejs.wxwztj.com/2017/02/04/解决Firefox不信任StartSSL证书问题/</id>
    <published>2017-02-04T07:42:00.000Z</published>
    <updated>2017-02-04T08:08:57.811Z</updated>
    
    <content type="html"><![CDATA[<p>在 <a href="https://startssl.com/" target="_blank" rel="external">Startssl</a> 注册好证书 <code>nginx</code> 下配置好生效后,<code>firefox</code>出现 <code>对等端的证书已被废除。 (错误代码:sec_error_revoked_certificate)</code>。其实并不是火狐不支持，而是自己没有配置好。</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://startssl.com/certs/ca.crt</div></pre></td></tr></table></figure>
<blockquote>
<p>Description: This root CA is the root used for all Certificates and must be included in root stores. ↑</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://startssl.com/certs/sca.server1.crt</div></pre></td></tr></table></figure>
<blockquote>
<p>下载Startssl Class 1的根证书 ↑</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat server.crt ca.crt sca.server1.crt &gt; servernew.crt</div></pre></td></tr></table></figure>
<blockquote>
<p>server.crt 是域名的证书,后面合并的俩文件是下载的Startssl根证书和Startssl Class1根证书</p>
</blockquote>
<p>现在可以正常访问了。</p>
<p><a href="https://daily.81810999.com/" target="_blank" rel="external">https://daily.81810999.com/</a></p>
<a id="more"></a>
<p>nginx 站点配置文件如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        server_name daily.81810999.com;</div><div class="line">        rewrite ^(.*) https://$server_name$1 permanent;</div><div class="line">&#125;</div><div class="line">server &#123;</div><div class="line">        listen       443 ssl;</div><div class="line">        server_name daily.81810999.com;</div><div class="line">        ssl_certificate /root/server.crt;</div><div class="line">        ssl_certificate_key /root/server.unsecure;</div><div class="line">        root /www/web/daily_81810999_com/public_html;        </div><div class="line">        index  index.html index.php index.htm;</div><div class="line">        error_page  400 /errpage/400.html;</div><div class="line">        error_page  403 /errpage/403.html;</div><div class="line">        error_page  404 /errpage/404.html;</div><div class="line">        error_page  503 /errpage/503.html;</div><div class="line">        location ~ \.php$ &#123;</div><div class="line">                proxy_pass http://127.0.0.1:88;</div><div class="line">                include naproxy.conf;</div><div class="line">        &#125;</div><div class="line">        location ~ /\.ht &#123;</div><div class="line">                deny  all;</div><div class="line">        &#125;</div><div class="line">        location / &#123;</div><div class="line">                try_files $uri @apache;</div><div class="line">        &#125;</div><div class="line">        location @apache &#123;</div><div class="line">                 proxy_pass http://127.0.0.1:88;</div><div class="line">                 include naproxy.conf;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 &lt;a href=&quot;https://startssl.com/&quot;&gt;Startssl&lt;/a&gt; 注册好证书 &lt;code&gt;nginx&lt;/code&gt; 下配置好生效后,&lt;code&gt;firefox&lt;/code&gt;出现 &lt;code&gt;对等端的证书已被废除。 (错误代码:sec_error_revoked_certificate)&lt;/code&gt;。其实并不是火狐不支持，而是自己没有配置好。&lt;/p&gt;
&lt;h4 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法:&quot;&gt;&lt;/a&gt;解决方法:&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://startssl.com/certs/ca.crt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Description: This root CA is the root used for all Certificates and must be included in root stores. ↑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://startssl.com/certs/sca.server1.crt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;下载Startssl Class 1的根证书 ↑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat server.crt ca.crt sca.server1.crt &amp;gt; servernew.crt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;server.crt 是域名的证书,后面合并的俩文件是下载的Startssl根证书和Startssl Class1根证书&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在可以正常访问了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://daily.81810999.com/&quot;&gt;https://daily.81810999.com/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="https" scheme="http://nodejs.wxwztj.com/categories/https/"/>
    
    
      <category term="startssl" scheme="http://nodejs.wxwztj.com/tags/startssl/"/>
    
      <category term="firefox" scheme="http://nodejs.wxwztj.com/tags/firefox/"/>
    
      <category term="sec_error_revoked_certificate" scheme="http://nodejs.wxwztj.com/tags/sec-error-revoked-certificate/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch写入数据存储过程</title>
    <link href="http://nodejs.wxwztj.com/2017/02/04/elasticsearch%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://nodejs.wxwztj.com/2017/02/04/elasticsearch写入数据存储过程/</id>
    <published>2017-02-04T00:57:00.000Z</published>
    <updated>2017-02-04T01:00:02.909Z</updated>
    
    <content type="html"><![CDATA[<p>es建索引写入数据，数据最先是存在内存buffer里的，然后再刷入到lucene的底层文件segment中；写入segment完毕后再执行refresh操作，refresh操作后，数据将commit到磁盘中。数据刷入到了磁盘，就可以执行查询操作了。</p>
<blockquote>
<p>过程简单描述如下：内存<code>buffer</code>–&gt;<code>segment</code>–&gt;<code>refresh</code>–&gt;<code>磁盘</code></p>
</blockquote>
<p>注意，这些过程，会有<code>translog</code>记录；<code>translog</code>存在的意义就是保证数据刷入的可靠性；因为我们刚才说过，es建索引写入数据的过程是内存到磁盘的过程，这个过程有日志的记录，那就是<code>translog</code>，当数据还在内存里没刷到磁盘中时，如果服务器<code>down</code>了又没<code>translog</code>机制的话，那么数据就会丢失，有了<code>translog</code>，服务器<code>down</code>机后再起来，就能很快恢复写入的过程。</p>
<p>这里要注意的是，<code>translog</code>也是先存在内存里的，然后默认5秒刷一次写到硬盘里</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;es建索引写入数据，数据最先是存在内存buffer里的，然后再刷入到lucene的底层文件segment中；写入segment完毕后再执行refresh操作，refresh操作后，数据将commit到磁盘中。数据刷入到了磁盘，就可以执行查询操作了。&lt;/p&gt;
&lt;blockqu
    
    </summary>
    
      <category term="elasticsearch" scheme="http://nodejs.wxwztj.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://nodejs.wxwztj.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>前端优化系列之一：DNS预获取 DNS Prefetch 提升页面载入速度</title>
    <link href="http://nodejs.wxwztj.com/2016/12/11/first-of-front-end-series-dns-prefetch-increase-load-speed/"/>
    <id>http://nodejs.wxwztj.com/2016/12/11/first-of-front-end-series-dns-prefetch-increase-load-speed/</id>
    <published>2016-12-11T02:05:30.000Z</published>
    <updated>2016-12-11T02:10:58.628Z</updated>
    
    <content type="html"><![CDATA[<p><code>DNS Prefetch</code>，即<code>DNS</code>预获取，是前端优化的一部分。一般来说，在前端优化中与 DNS 有关的有两点：一个是减少<code>DNS</code>的请求次数，另一个就是进行DNS预获取。</p>
<p><code>DNS</code> 作为互联网的基础协议，其解析的速度似乎很容易被网站优化人员忽视。现在大多数新浏览器已经针对DNS解析进行了优化，典型的一次DNS解析需要耗费 20-120 毫秒，减少DNS解析时间和次数是个很好的优化方式。<code>DNS Prefetching</code> 是让具有此属性的域名不需要用户点击链接就在后台解析，而域名解析和内容载入是串行的网络操作，所以这个方式能减少用户的等待时间，提升用户体验。</p>
<p>默认情况下浏览器会对页面中和当前域名（正在浏览网页的域名）不在同一个域的域名进行预获取，并且缓存结果，这就是隐式的 <code>DNS Prefetch</code>。如果想对页面中没有出现的域进行预获取，那么就要使用显示的 <code>DNS Prefetch</code> 了。</p>
<p>目前大多数浏览器已经支持此属性，支持版本如下：</p>
<ul>
<li><code>Safari: 5+</code></li>
<li><code>Chrome: All</code></li>
<li><code>Firefox: 3.5+</code></li>
<li><code>Opera: Unknown</code></li>
<li><code>IE: 9+ (called “Pre-resolution” on blogs.msdn.com)</code></li>
</ul>
<p>其中 <code>Chrome</code> 和 <code>Firefox 3.5+</code> 内置了 <code>DNS Prefetching</code> 技术并对DNS预解析做了相应优化设置。所以即使不设置此属性，<code>Chrome</code> 和 <code>Firefox 3.5+</code> 也能自动在后台进行预解析。</p>
<p><code>DNS Prefetch</code> 应该尽量的放在网页的前面，推荐放在<code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>后面。具体使用方法如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"x-dns-prefetch-control"</span> <span class="attr">content</span>=<span class="string">"on"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"dns-prefetch"</span> <span class="attr">href</span>=<span class="string">"//www.techzero.cn"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"dns-prefetch"</span> <span class="attr">href</span>=<span class="string">"//api.share.baidu.com"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"dns-prefetch"</span> <span class="attr">href</span>=<span class="string">"//bdimg.share.baidu.com"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>需要注意的是，虽然使用 DNS Prefetch 能够加快页面的解析速度，但是也不能滥用，因为有开发者指出 禁用DNS 预读取能节省每月100亿的DNS查询。</p>
<p>如果需要禁止隐式的 DNS Prefetch，可以使用以下的标签：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"x-dns-prefetch-control"</span> <span class="attr">content</span>=<span class="string">"off"</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;DNS Prefetch&lt;/code&gt;，即&lt;code&gt;DNS&lt;/code&gt;预获取，是前端优化的一部分。一般来说，在前端优化中与 DNS 有关的有两点：一个是减少&lt;code&gt;DNS&lt;/code&gt;的请求次数，另一个就是进行DNS预获取。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;D
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AngularJS 中使用Swiper制作滚动图不能滑动 </title>
    <link href="http://nodejs.wxwztj.com/2016/11/18/AngularJS-%E4%B8%AD%E4%BD%BF%E7%94%A8Swiper%E5%88%B6%E4%BD%9C%E6%BB%9A%E5%8A%A8%E5%9B%BE%E4%B8%8D%E8%83%BD%E6%BB%91%E5%8A%A8/"/>
    <id>http://nodejs.wxwztj.com/2016/11/18/AngularJS-中使用Swiper制作滚动图不能滑动/</id>
    <published>2016-11-18T01:40:24.000Z</published>
    <updated>2016-11-18T01:42:24.539Z</updated>
    
    <content type="html"><![CDATA[<p><code>Swiper</code>是目前较为流行的移动端触摸滑动插件，因为其简单好用易上手，受到很多前端开发者的欢迎。<br><a id="more"></a><br>今天在使用<code>Swiper</code>的时候遇到这个问题：</p>
<p>使用<code>angularjs</code>动态循环生成<code>swiper-slide</code>类，在<code>swiper-wrapper</code>里生成6个以上的滑动页，可是就是划不到第二页，尝试将<code>longSwipesRatio</code>的值修改到最小，仍然不起作用。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-wrapper"</span> &gt;</span></div><div class="line">     <span class="comment">&lt;!-- =======循环部分======= --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-slide"</span> <span class="attr">ng-repeat</span>=<span class="string">"result in mediaList"</span>&gt;</span></div><div class="line">         //此处为一个滑动页内容</div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div><div class="line">      <span class="comment">&lt;!-- ============== --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>在测试时发现，手动复制n个循环部分，则可以滑动n个块；手动调节窗口大小，使页面文档发生改变（动态响应）后，可以正常滑动。</p>
<p>于是猜测<code>swiper</code>的机制是：初始化的时候自动扫描<code>swiper-wrapper</code>类下有多少个<code>swiper-slide</code>类块，则允许滑动多少个块。 而在<code>angular</code>始终在<code>swiper</code>初始化之后定义，<code>swiper</code>则无法正确<code>scan</code>有多少个<code>slide</code>（实际上找到一个待循环模板），所以划不动。</p>
<p>找到原因后，只须对症下药。 在查阅<code>Swiper</code>的<code>API</code>时发现，有这样两个参数：<code>observer</code>和<code>observeParents</code>，前者启动动态检查器，当改变<code>swiper</code>的样式（例如隐藏/显示）或者修改<code>swiper</code>的子元素时，自动初始化<code>swiper</code>。后者原理和前者一样，只是将<code>observe</code>应用于<code>Swiper</code>的父元素。两者默认值都为<code>false</code>。 所以在原来的<code>swiper</code>初始化代码中加上这两行即可。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper(<span class="string">'.swiper-container'</span>,&#123;</div><div class="line">pagination : <span class="string">'.swiper-pagination'</span>,</div><div class="line">    paginationClickable: <span class="literal">true</span>,</div><div class="line">    longSwipesRatio: <span class="number">0.3</span>,</div><div class="line">    touchRatio:<span class="number">1</span>,</div><div class="line">    observer:<span class="literal">true</span>,<span class="comment">//修改swiper自己或子元素时，自动初始化swiper</span></div><div class="line">    observeParents:<span class="literal">true</span>,<span class="comment">//修改swiper的父元素时，自动初始化swiper</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Swiper&lt;/code&gt;是目前较为流行的移动端触摸滑动插件，因为其简单好用易上手，受到很多前端开发者的欢迎。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>facebook登录 在 php 框架 slim里的实现</title>
    <link href="http://nodejs.wxwztj.com/2016/11/11/facebook%E7%99%BB%E5%BD%95-%E5%9C%A8-php-%E6%A1%86%E6%9E%B6-slim%E9%87%8C%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://nodejs.wxwztj.com/2016/11/11/facebook登录-在-php-框架-slim里的实现/</id>
    <published>2016-11-11T05:35:09.000Z</published>
    <updated>2016-11-11T05:43:28.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>首先使用<code>composer</code> 安装 facebook的php SDK<br><code>composer require facebook/graph-sdk</code></p>
</blockquote>
<p>使用了Slim框架，登录也是调用的接口，总共定义了两个链接(或者路由)<code>facebookLogin</code>和<code>facebookCallback</code> . 一个入口链接:负责处理跳转到facebook登录并跳回的功能。另一个是处理回调的：获取facebook的用户基本信息并登录。<br><a id="more"></a><br><code>facebookLogin</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">facebookLogin</span><span class="params">(Request $request,Response $response)</span></span></div><div class="line">&#123;  </div><div class="line">    $appid=<span class="string">'1213187855410344'</span>;</div><div class="line">    $fb = <span class="keyword">new</span> \Facebook\Facebook([</div><div class="line">      <span class="string">'app_id'</span> =&gt; $appid,</div><div class="line">      <span class="string">'app_secret'</span> =&gt; <span class="string">'8b1151cfa1958249297e6e061e771207'</span>,</div><div class="line">      <span class="string">'default_graph_version'</span> =&gt; <span class="string">'v2.8'</span>,</div><div class="line">      ]);</div><div class="line"></div><div class="line">    $helper = $fb-&gt;getRedirectLoginHelper();</div><div class="line"></div><div class="line">    $permissions = [<span class="string">'email'</span>]; <span class="comment">// Optional permissions</span></div><div class="line">    $loginUrl = $helper-&gt;getLoginUrl(<span class="string">'http://www.product.win/fb-callback'</span>, $permissions);</div><div class="line">    <span class="keyword">return</span> $response-&gt;withRedirect($loginUrl);</div><div class="line">&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">facebookCallback</span><span class="params">(Request $request, Response $slimresponse)</span></span></div><div class="line">&#123;</div><div class="line">    $utils=<span class="keyword">new</span> Utils(<span class="keyword">$this</span>-&gt;guzzle,<span class="keyword">$this</span>-&gt;id_token,<span class="keyword">$this</span>-&gt;logger,<span class="keyword">$this</span>-&gt;lg);</div><div class="line"></div><div class="line">    $appid=<span class="string">'1213187855410344'</span>;</div><div class="line">    $fb = <span class="keyword">new</span> \Facebook\Facebook([</div><div class="line">      <span class="string">'app_id'</span> =&gt; $appid, </div><div class="line">      <span class="string">'app_secret'</span> =&gt; <span class="string">'8b1151cfa1958249297e6e061e771207'</span>,</div><div class="line">      <span class="string">'default_graph_version'</span> =&gt; <span class="string">'v2.8'</span>,</div><div class="line">      ]);</div><div class="line"></div><div class="line">    $helper = $fb-&gt;getRedirectLoginHelper();</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      $accessToken = $helper-&gt;getAccessToken();</div><div class="line">    &#125; <span class="keyword">catch</span>(Facebook\Exceptions\FacebookResponseException $e) &#123;</div><div class="line">      <span class="comment">// When Graph returns an error</span></div><div class="line">      <span class="keyword">echo</span> <span class="string">'Graph returned an error: '</span> . $e-&gt;getMessage();</div><div class="line">      <span class="keyword">exit</span>;</div><div class="line">    &#125; <span class="keyword">catch</span>(Facebook\Exceptions\FacebookSDKException $e) &#123;</div><div class="line">      <span class="comment">// When validation fails or other local issues</span></div><div class="line">      <span class="keyword">echo</span> <span class="string">'Facebook SDK returned an error: '</span> . $e-&gt;getMessage();</div><div class="line">      <span class="keyword">exit</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (! <span class="keyword">isset</span>($accessToken)) &#123;</div><div class="line">      <span class="keyword">if</span> ($helper-&gt;getError()) &#123;</div><div class="line">        header(<span class="string">'HTTP/1.0 401 Unauthorized'</span>);</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Error: "</span> . $helper-&gt;getError() . <span class="string">"\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Error Code: "</span> . $helper-&gt;getErrorCode() . <span class="string">"\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Error Reason: "</span> . $helper-&gt;getErrorReason() . <span class="string">"\n"</span>;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Error Description: "</span> . $helper-&gt;getErrorDescription() . <span class="string">"\n"</span>;</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">        header(<span class="string">'HTTP/1.0 400 Bad Request'</span>);</div><div class="line">        <span class="keyword">echo</span> <span class="string">'Bad request'</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">exit</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//上面为处理跳转授权之类的代码  下面是获取用户信息   根据传递的字段 获取...</span></div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      <span class="comment">// Get the \Facebook\GraphNodes\GraphUser object for the current user.</span></div><div class="line">      <span class="comment">// If you provided a 'default_access_token', the '&#123;access-token&#125;' is optional.</span></div><div class="line">      $response = $fb-&gt;get(<span class="string">'/me?fields=id,name,email,picture,gender'</span>,$accessToken);</div><div class="line">    &#125; <span class="keyword">catch</span>(\Facebook\Exceptions\FacebookResponseException $e) &#123;</div><div class="line">      <span class="comment">// When Graph returns an error</span></div><div class="line">      <span class="keyword">echo</span> <span class="string">'Graph returned an error: '</span> . $e-&gt;getMessage();</div><div class="line">      <span class="keyword">exit</span>;</div><div class="line">    &#125; <span class="keyword">catch</span>(\Facebook\Exceptions\FacebookSDKException $e) &#123;</div><div class="line">      <span class="comment">// When validation fails or other local issues</span></div><div class="line">      <span class="keyword">echo</span> <span class="string">'Facebook SDK returned an error: '</span> . $e-&gt;getMessage();</div><div class="line">      <span class="keyword">exit</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $me = $response-&gt;getGraphUser();<span class="comment">//facebook/src/Facebook/GraphNodes/GraphUser.php  类文件</span></div><div class="line">    </div><div class="line">    <span class="keyword">if</span>($me-&gt;getEmail())&#123;<span class="comment">//手机注册的可能没有email账号...</span></div><div class="line">        $postData=[</div><div class="line">            <span class="string">'appid'</span>=&gt;$appid,</div><div class="line">            <span class="string">'email'</span>=&gt;$me-&gt;getEmail(),</div><div class="line">            <span class="string">'gender'</span>=&gt;$me-&gt;getGender(),</div><div class="line">            <span class="string">'name'</span>=&gt;$me-&gt;getName(),</div><div class="line">            <span class="string">'os'</span>=&gt;$utils-&gt;getOS(),<span class="comment">//utils文件新增获取操作系统的功能</span></div><div class="line">            <span class="string">'picture'</span>=&gt;$me-&gt;getPicture()-&gt;getUrl(),<span class="comment">//facebook/src/Facebook/GraphNodes/GraphPicture.php 类文件</span></div><div class="line">            <span class="string">'rememberMe'</span>=&gt;<span class="keyword">true</span>,</div><div class="line">            <span class="string">'token'</span>=&gt;$accessToken-&gt;getValue(),</div><div class="line">            <span class="string">'userid'</span>=&gt;$me-&gt;getId()</div><div class="line">        ];</div><div class="line">        <span class="comment">//调用facebook接口登录</span></div><div class="line">        $ret=$utils-&gt;faceBookLogin([<span class="string">'json'</span>=&gt;$postData]);</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($ret[<span class="string">'id_token'</span>]))&#123;</div><div class="line">            setcookie(<span class="string">"id_token"</span>,<span class="string">"Bearer "</span>.$ret[<span class="string">'id_token'</span>],time()+<span class="number">3600</span>*<span class="number">24</span>,<span class="string">'/'</span>); </div><div class="line">            setcookie(<span class="string">"fb_user"</span>,json_encode($ret),time()+<span class="number">3600</span>*<span class="number">24</span>,<span class="string">'/'</span>); <span class="comment">//保存接口返回的信息  </span></div><div class="line">            <span class="keyword">return</span> $slimresponse-&gt;withRedirect(<span class="string">'/'</span>); <span class="comment">//$slimresponse 避免和 facebook的$response 重名</span></div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="comment">//手机注册的可能没有email账号...</span></div><div class="line">        <span class="keyword">die</span>(<span class="string">'the Facebook account doesn\'t have the email address...'</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先使用&lt;code&gt;composer&lt;/code&gt; 安装 facebook的php SDK&lt;br&gt;&lt;code&gt;composer require facebook/graph-sdk&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用了Slim框架，登录也是调用的接口，总共定义了两个链接(或者路由)&lt;code&gt;facebookLogin&lt;/code&gt;和&lt;code&gt;facebookCallback&lt;/code&gt; . 一个入口链接:负责处理跳转到facebook登录并跳回的功能。另一个是处理回调的：获取facebook的用户基本信息并登录。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spring jdbc 操作 mysql</title>
    <link href="http://nodejs.wxwztj.com/2016/09/29/apache-tomcat7-0-win7%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E5%8A%A8/"/>
    <id>http://nodejs.wxwztj.com/2016/09/29/apache-tomcat7-0-win7上的安装和启动/</id>
    <published>2016-09-29T00:36:09.000Z</published>
    <updated>2016-10-15T01:28:32.206Z</updated>
    
    <content type="html"><![CDATA[<p><code>build.gradle</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">buildscript</span> &#123;</div><div class="line">    <span class="keyword">repositories</span> &#123;</div><div class="line">        mavenCentral()</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">dependencies</span> &#123;</div><div class="line">        <span class="keyword">classpath</span>(<span class="string">"org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE"</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">apply plugin: <span class="string">'java'</span></div><div class="line">apply plugin: <span class="string">'eclipse'</span></div><div class="line">apply plugin: <span class="string">'idea'</span></div><div class="line">apply plugin: <span class="string">'spring-boot'</span></div><div class="line"></div><div class="line">jar &#123;</div><div class="line">    baseName = <span class="string">'gs-serving-web-content'</span></div><div class="line">    version =  <span class="string">'0.1.0'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">repositories</span> &#123;</div><div class="line">    mavenCentral()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">sourceCompatibility</span> = <span class="number">1.8</span></div><div class="line"><span class="keyword">targetCompatibility</span> = <span class="number">1.8</span></div><div class="line"></div><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="keyword">compile</span>(<span class="string">"org.springframework.boot:spring-boot-starter-thymeleaf"</span>)</div><div class="line">    <span class="keyword">compile</span>(<span class="string">"org.springframework:spring-jdbc"</span>)</div><div class="line">    <span class="keyword">compile</span>(<span class="string">"mysql:mysql-connector-java:5.1.24"</span>)</div><div class="line">    <span class="keyword">compile</span>(<span class="string">"org.springframework.boot:spring-boot-devtools"</span>)</div><div class="line">    testCompile(<span class="string">"junit:junit"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> javax.sql.DataSource;</div><div class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DriverManagerDataSource;</div><div class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</div><div class="line"></div><div class="line"><span class="keyword">import</span> hello.User;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by Administrator on 2016/9/29 0029.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDataSource</span><span class="params">(DataSource dataSource)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(dataSource);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.jdbcTemplate.queryForObject(<span class="string">"select name from users limit 1"</span>, String.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getList</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> jdbcTemplate.query(</div><div class="line">                <span class="string">"SELECT id, name, email,created_at  FROM users"</span>,</div><div class="line">                (rs, rowNum) -&gt; <span class="keyword">new</span> User(rs.getString(<span class="string">"id"</span>), rs.getString(<span class="string">"email"</span>), rs.getString(<span class="string">"name"</span>),rs.getBigDecimal(<span class="string">"created_at"</span>))</div><div class="line">        );</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</div><div class="line">        DriverManagerDataSource dataSource = <span class="keyword">new</span> DriverManagerDataSource();</div><div class="line">        dataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</div><div class="line">        dataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/awesome"</span>);</div><div class="line">        dataSource.setUsername(<span class="string">"root"</span>);</div><div class="line">        dataSource.setPassword(<span class="string">"root"</span>);</div><div class="line"></div><div class="line">        Test test=<span class="keyword">new</span> Test();</div><div class="line">        test.setDataSource(dataSource);</div><div class="line">        <span class="comment">//String name=test.getName();</span></div><div class="line">        List&lt;User&gt; list = test.getList();</div><div class="line">        list.forEach(user-&gt;System.out.println(user));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;build.gradle&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mavenCentral()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;java&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;eclipse&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;idea&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;spring-boot&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jar &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    baseName = &lt;span class=&quot;string&quot;&gt;&#39;gs-serving-web-content&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    version =  &lt;span class=&quot;string&quot;&gt;&#39;0.1.0&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mavenCentral()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sourceCompatibility&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;targetCompatibility&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-starter-thymeleaf&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework:spring-jdbc&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;mysql:mysql-connector-java:5.1.24&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-devtools&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    testCompile(&lt;span class=&quot;string&quot;&gt;&quot;junit:junit&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Serving Web Content with Spring MVC</title>
    <link href="http://nodejs.wxwztj.com/2016/09/28/Serving-Web-Content-with-Spring-MVC/"/>
    <id>http://nodejs.wxwztj.com/2016/09/28/Serving-Web-Content-with-Spring-MVC/</id>
    <published>2016-09-28T13:50:00.000Z</published>
    <updated>2016-09-28T15:06:03.654Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://spring.io/guides/gs/serving-web-content/" target="_blank" rel="external">https://spring.io/guides/gs/serving-web-content/</a></p>
<p><code>gradle</code>用着确实比<code>maven</code>6很多，该demo主要使用<code>spring boot</code> 和 <code>thymeleaf</code>.本人系统环境 <code>win7</code></p>
<ul>
<li>IntelliJ IDEA</li>
<li>JDK 1.8</li>
<li>Gradle3.1</li>
</ul>
<h3 id="代码效果预览"><a href="#代码效果预览" class="headerlink" title="代码效果预览"></a>代码效果预览</h3><ul>
<li>使用git下载源码：<code>git clone https://github.com/spring-guides/gs-serving-web-content.git</code></li>
<li><code>cd gs-serving-web-content\complete</code></li>
<li><code>gradle bootRun</code> 或 <code>gradle build</code>之后运行<code>java -jar build/libs/gs-serving-web-content-0.1.0.jar</code>皆可<a id="more"></a>
<blockquote>
<p><a href="http://www.cnblogs.com/yjmyzz/p/executable-jar.html" target="_blank" rel="external">可运行jar包的几种打包/部署方式</a></p>
</blockquote>
</li>
</ul>
<p><code>build.gradle</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">buildscript</span> &#123;</div><div class="line">    <span class="keyword">repositories</span> &#123;</div><div class="line">        mavenCentral()</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">dependencies</span> &#123;</div><div class="line">        <span class="keyword">classpath</span>(<span class="string">"org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE"</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">apply plugin: <span class="string">'java'</span></div><div class="line">apply plugin: <span class="string">'eclipse'</span></div><div class="line">apply plugin: <span class="string">'idea'</span></div><div class="line">apply plugin: <span class="string">'spring-boot'</span></div><div class="line"></div><div class="line">jar &#123;</div><div class="line">    baseName = <span class="string">'gs-serving-web-content'</span></div><div class="line">    version =  <span class="string">'0.1.0'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">repositories</span> &#123;</div><div class="line">    mavenCentral()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">sourceCompatibility</span> = <span class="number">1.8</span></div><div class="line"><span class="keyword">targetCompatibility</span> = <span class="number">1.8</span></div><div class="line"></div><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="keyword">compile</span>(<span class="string">"org.springframework.boot:spring-boot-starter-thymeleaf"</span>)</div><div class="line">    <span class="keyword">compile</span>(<span class="string">"org.springframework.boot:spring-boot-devtools"</span>)</div><div class="line">    testCompile(<span class="string">"junit:junit"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>src/main/java/hello/GreetingController.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> hello;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.ui.Model;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</div><div class="line"></div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GreetingController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/greeting"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">greeting</span><span class="params">(@RequestParam(value=<span class="string">"name"</span>, required=<span class="keyword">false</span>, defaultValue=<span class="string">"World"</span>)</span> String name, Model model) </span>&#123;</div><div class="line">        model.addAttribute(<span class="string">"name"</span>, name);</div><div class="line">        <span class="keyword">return</span> <span class="string">"greeting"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>src/main/resources/templates/greeting.html</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Getting Started: Serving Web Content<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">"'Hello, ' + $&#123;name&#125; + '!'"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>src/main/java/hello/Application.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> hello;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line"></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(Application.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>@SpringBootApplication</code> is a convenience annotation that adds all of the following:</p>
<p><code>@Configuration</code> tags the class as a source of bean definitions for the application context.</p>
<p><code>@EnableAutoConfiguration</code> tells Spring Boot to start adding beans based on classpath settings, other beans, and various property settings.</p>
<p>Normally you would add <code>@EnableWebMvc</code> for a Spring MVC app, but Spring Boot adds it automatically when it sees spring-webmvc on the classpath. This flags the application as a web application and activates key behaviors such as setting up a DispatcherServlet.</p>
<p><code>@ComponentScan</code> tells Spring to look for other components, configurations, and services in the the hello package, allowing it to find the HelloController.</p>
<p>The main() method uses Spring Boot’s SpringApplication.run() method to launch an application. Did you notice that there wasn’t a single line of XML? No web.xml file either. This web application is 100% pure Java and you didn’t have to deal with configuring any plumbing or infrastructure.</p>
<p><a href="https://www.infoq.com/articles/microframeworks1-spring-boot" target="_blank" rel="external">https://www.infoq.com/articles/microframeworks1-spring-boot</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://spring.io/guides/gs/serving-web-content/&quot;&gt;https://spring.io/guides/gs/serving-web-content/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gradle&lt;/code&gt;用着确实比&lt;code&gt;maven&lt;/code&gt;6很多，该demo主要使用&lt;code&gt;spring boot&lt;/code&gt; 和 &lt;code&gt;thymeleaf&lt;/code&gt;.本人系统环境 &lt;code&gt;win7&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IntelliJ IDEA&lt;/li&gt;
&lt;li&gt;JDK 1.8&lt;/li&gt;
&lt;li&gt;Gradle3.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;代码效果预览&quot;&gt;&lt;a href=&quot;#代码效果预览&quot; class=&quot;headerlink&quot; title=&quot;代码效果预览&quot;&gt;&lt;/a&gt;代码效果预览&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用git下载源码：&lt;code&gt;git clone https://github.com/spring-guides/gs-serving-web-content.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd gs-serving-web-content\complete&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradle bootRun&lt;/code&gt; 或 &lt;code&gt;gradle build&lt;/code&gt;之后运行&lt;code&gt;java -jar build/libs/gs-serving-web-content-0.1.0.jar&lt;/code&gt;皆可
    
    </summary>
    
      <category term="spring" scheme="http://nodejs.wxwztj.com/categories/spring/"/>
    
    
      <category term="java" scheme="http://nodejs.wxwztj.com/tags/java/"/>
    
      <category term="spring" scheme="http://nodejs.wxwztj.com/tags/spring/"/>
    
      <category term="thymeleaf" scheme="http://nodejs.wxwztj.com/tags/thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>99%的人都理解错了http的get和post的区别</title>
    <link href="http://nodejs.wxwztj.com/2016/09/25/99-%E7%9A%84%E4%BA%BA%E9%83%BD%E7%90%86%E8%A7%A3%E9%94%99%E4%BA%86http%E7%9A%84get%E5%92%8Cpost%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://nodejs.wxwztj.com/2016/09/25/99-的人都理解错了http的get和post的区别/</id>
    <published>2016-09-25T01:37:00.000Z</published>
    <updated>2016-09-27T00:38:05.957Z</updated>
    
    <content type="html"><![CDATA[<p>GET和POST是HTTP请求的两种基本方法，要说它们的区别，接触过WEB开发的人都能说出一二。</p>
<p>最直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。</p>
<p>你可能自己写过无数个GET和POST请求，或者已经看过很多权威网站总结出的他们的区别，你非常清楚知道什么时候该用什么。</p>
<p>当你在面试中被问到这个问题，你的内心充满了自信和喜悦。</p>
<p><img src="/2016/09/7033e829adefa33d1a660664ac93e600.png" alt="so easy"></p>
<p>你轻轻松松的给出了一个“标准答案”：</p>
<pre><code>GET在浏览器回退时是无害的，而POST会再次提交请求。
GET产生的URL地址可以被Bookmark，而POST不可以。
GET请求会被浏览器主动cache，而POST不会，除非手动设置。
GET请求只能进行url编码，而POST支持多种编码方式。
GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。
GET请求在URL中传送的参数是有长度限制的，而POST么有。
对参数的数据类型，GET只接受ASCII字符，而POST没有限制。
GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。
GET参数通过URL传递，POST放在Request body中。
</code></pre><p>（本标准答案参考自w3schools）</p>
<p>“很遗憾，这不是我们要的回答！”</p>
<p><img src="/2016/09/f0fd4334d974db6df8ef1e89d016babe.png" alt="我的内心是崩溃的"></p>
<p>请告诉我真相。。。<br><a id="more"></a><br>如果我告诉你GET和POST本质上没有区别你信吗？<br>让我们扒下GET和POST的外衣，坦诚相见吧！</p>
<p><img src="/2016/09/138cf5d4582857a8572b641fe041519c.png" alt="O(∩_∩)O"></p>
<p>GET和POST是什么？HTTP协议中的两种发送请求的方法。</p>
<p>HTTP是什么？HTTP是基于TCP/IP的关于数据如何在万维网中如何通信的协议。</p>
<p>HTTP的底层是TCP/IP。所以GET和POST的底层也是TCP/IP，也就是说，GET/POST都是TCP链接。GET和POST能做的事情是一样一样的。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。</p>
<p>那么，“标准答案”里的那些区别是怎么回事？</p>
<p><img src="/2016/09/9adc879f200f18c2081007e6189708b3.png" alt=""></p>
<p>在我大万维网世界中，TCP就像汽车，我们用TCP来运输数据，它很可靠，从来不会发生丢件少件的现象。但是如果路上跑的全是看起来一模一样的汽车，那这个世界看起来是一团混乱，送急件的汽车可能被前面满载货物的汽车拦堵在路上，整个交通系统一定会瘫痪。为了避免这种情况发生，交通规则HTTP诞生了。HTTP给汽车运输设定了好几个服务类别，有GET, POST, PUT, DELETE等等，HTTP规定，当执行GET请求的时候，要给汽车贴上GET的标签（设置method为GET），而且要求把传送的数据放在车顶上（url中）以方便记录。如果是POST请求，就要在车上贴上POST的标签，并把货物放在车厢里。当然，你也可以在GET的时候往车厢内偷偷藏点货物，但是这是很不光彩；也可以在POST的时候在车顶上也放一些数据，让人觉得傻乎乎的。HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。</p>
<p>但是，我们只看到HTTP对GET和POST参数的传送渠道（url还是requrest body）提出了要求。“标准答案”里关于参数大小的限制又是从哪来的呢？</p>
<p><img src="/2016/09/7d4951f4f0aec2338987f4624cfed135.png" alt=""></p>
<p>在我大万维网世界中，还有另一个重要的角色：运输公司。不同的浏览器（发起http请求）和服务器（接受http请求）就是不同的运输公司。 虽然理论上，你可以在车顶上无限的堆货物（url中无限加参数）。但是运输公司可不傻，装货和卸货也是有很大成本的，他们会限制单次运输量来控制风险，数据量太大对浏览器和服务器都是很大负担。业界不成文的规定是，（大多数）浏览器通常都会限制url长度在2K个字节，而（大多数）服务器最多处理64K大小的url。超过的部分，恕不处理。如果你用GET服务，在request body偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然GET可以带request body，也不能保证一定能被接收到哦。</p>
<p>好了，现在你知道，GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。</p>
<p>你以为本文就这么结束了？</p>
<p><img src="/2016/09/60d723cf5b116a06f03106813c690560.png" alt=""></p>
<p>我们的大BOSS还等着出场呢。。。</p>
<p>这位BOSS有多神秘？当你试图在网上找“GET和POST的区别”的时候，那些你会看到的搜索结果里，从没有提到他。他究竟是什么呢。。。</p>
<p>GET和POST还有一个重大区别，简单的说：</p>
<p>GET产生一个TCP数据包；POST产生两个TCP数据包。</p>
<p>长的说：</p>
<p>对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；</p>
<p>而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。</p>
<p>也就是说，GET只需要汽车跑一趟就把货送到了，而POST得跑两趟，第一趟，先去和服务器打个招呼“嗨，我等下要送一批货来，你们打开门迎接我”，然后再回头把货送过去。</p>
<p>因为POST需要两步，时间上消耗的要多一点，看起来GET比POST更有效。因此Yahoo团队有推荐用GET替换POST来优化网站性能。但这是一个坑！跳入需谨慎。为什么？</p>
<ol>
<li><p>GET与POST都有自己的语义，不能随便混用。</p>
</li>
<li><p>据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。</p>
</li>
<li><p>并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。</p>
</li>
</ol>
<p>现在，当面试官再问你“GET与POST的区别”的时候，你的内心是不是这样的？</p>
<p><img src="/2016/09/52e6a20bcf99b8fce4d146e7e8a3436a.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GET和POST是HTTP请求的两种基本方法，要说它们的区别，接触过WEB开发的人都能说出一二。&lt;/p&gt;
&lt;p&gt;最直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。&lt;/p&gt;
&lt;p&gt;你可能自己写过无数个GET和POST请求，或者已经看过很多权威网站总结出的他们的区别，你非常清楚知道什么时候该用什么。&lt;/p&gt;
&lt;p&gt;当你在面试中被问到这个问题，你的内心充满了自信和喜悦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/09/7033e829adefa33d1a660664ac93e600.png&quot; alt=&quot;so easy&quot;&gt;&lt;/p&gt;
&lt;p&gt;你轻轻松松的给出了一个“标准答案”：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET在浏览器回退时是无害的，而POST会再次提交请求。
GET产生的URL地址可以被Bookmark，而POST不可以。
GET请求会被浏览器主动cache，而POST不会，除非手动设置。
GET请求只能进行url编码，而POST支持多种编码方式。
GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。
GET请求在URL中传送的参数是有长度限制的，而POST么有。
对参数的数据类型，GET只接受ASCII字符，而POST没有限制。
GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。
GET参数通过URL传递，POST放在Request body中。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（本标准答案参考自w3schools）&lt;/p&gt;
&lt;p&gt;“很遗憾，这不是我们要的回答！”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/09/f0fd4334d974db6df8ef1e89d016babe.png&quot; alt=&quot;我的内心是崩溃的&quot;&gt;&lt;/p&gt;
&lt;p&gt;请告诉我真相。。。&lt;br&gt;
    
    </summary>
    
      <category term="http" scheme="http://nodejs.wxwztj.com/categories/http/"/>
    
    
      <category term="http" scheme="http://nodejs.wxwztj.com/tags/http/"/>
    
      <category term="get" scheme="http://nodejs.wxwztj.com/tags/get/"/>
    
      <category term="post" scheme="http://nodejs.wxwztj.com/tags/post/"/>
    
  </entry>
  
  <entry>
    <title>知乎回答收藏</title>
    <link href="http://nodejs.wxwztj.com/2016/09/19/%E7%9F%A5%E4%B9%8E%E5%9B%9E%E7%AD%94%E6%94%B6%E8%97%8F/"/>
    <id>http://nodejs.wxwztj.com/2016/09/19/知乎回答收藏/</id>
    <published>2016-09-19T07:06:00.000Z</published>
    <updated>2016-09-19T07:07:08.941Z</updated>
    
    <content type="html"><![CDATA[<p>作者：冷哲<br>链接：<a href="https://www.zhihu.com/question/39461277/answer/81603550" target="_blank" rel="external">https://www.zhihu.com/question/39461277/answer/81603550</a><br>来源：知乎<br>著作权归作者所有，转载请联系作者获得授权。<br><a id="more"></a><br>原因是这样的：一个人也可以过得很好。</p>
<p>在过去没有洗衣机的年代，基本上周日这一天就是收拾房子加洗衣服了。下馆子是一周一次、一月一次甚至一年一次才有的奢侈活动。</p>
<p>我们知道一个人给两个人做饭的时间大大小于两个人分别给自己做饭的时间之和。一个人给两个人洗衣服的时间也小于两个人分别给自己洗衣服的时间之和。很多事情都类似。</p>
<p>因此，结婚可以提高劳动的效率、节省时间，大大提高两个人的生活质量。</p>
<p>现在则不同了。吃饭可以下馆子，洗衣服有洗衣机，打扫房间也可以请阿姨。再加上性开放的潮流，结婚对生活质量的提高是越来越有限了。越是高收入人群越是如此。</p>
<p>而且，人和人的口味毕竟不同，原来想去哪里玩说走就走，想吃什么就可以立刻去吃，吃喝玩乐也不必避讳异性。一旦结为情侣，这种自由立刻就失去了大半。需要照顾的因素立刻就多了起来。在结为情侣乃至结婚的过程中，你需要放弃很多的自由，在一些问题上作出妥协，而获得的东西并不见得很多。所以不管从长远来看是不是收益更多，对于越来越多的人来说，在结成情侣或夫妇的短期之内，生活质量可能反而是下降的。要让人能接受这种下降，就需要理由。</p>
<p>因此，在过去，只要对方没有什么不好，大概就足够了。交际圈子不大，选择也不多，物质生活精神生活也不丰富，既然对方没什么不好，两相结合损失不大，而婚后又能提升生活质量，何乐而不为呢。反观如今，结婚要放弃一部分眼前的自由和其他的利益，而收益却是不那么显著，或者是在时间上相对遥远（比如子嗣），那么当寻找情侣的时候，“对方没什么不好”就不够了，甚至“对方其实各方面都挺好”也不够了。</p>
<p>这时候，人们就不自觉地要求对方有某种让自己甘愿放弃眼前自由和其他利益的特质，一种让自己欣喜和重视的闪光点。而这，即便不说是困难的，概率也是很低的。越是优秀、越是财务自由的人可能越是如此。他们甚至不知道这种闪光点究竟是什么，有哪些可能。这就是大家常听到的分手理由——“没有感觉”。也说不上对方哪里不好，说不出对方哪里不合心意，总之就是没有感觉。其实说白了就是，对方缺乏一个让自己甘愿放弃单身生活的闪光点。</p>
<p>如此一来，自然结婚脚步就推迟了。</p>
<p>这也许说明如今的社会比以往更要求以爱情作为婚姻的先决条件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：冷哲&lt;br&gt;链接：&lt;a href=&quot;https://www.zhihu.com/question/39461277/answer/81603550&quot;&gt;https://www.zhihu.com/question/39461277/answer/81603550&lt;/a&gt;&lt;br&gt;来源：知乎&lt;br&gt;著作权归作者所有，转载请联系作者获得授权。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>鼠标滚动mousewheel和touch滑动全屏切换效果</title>
    <link href="http://nodejs.wxwztj.com/2016/09/17/%E9%BC%A0%E6%A0%87%E6%BB%9A%E5%8A%A8mousewheel%E5%92%8Ctouch%E6%BB%91%E5%8A%A8%E5%85%A8%E5%B1%8F%E5%88%87%E6%8D%A2%E6%95%88%E6%9E%9C/"/>
    <id>http://nodejs.wxwztj.com/2016/09/17/鼠标滚动mousewheel和touch滑动全屏切换效果/</id>
    <published>2016-09-17T07:49:00.000Z</published>
    <updated>2016-09-19T02:38:43.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。"><a href="#根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。" class="headerlink" title="根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。"></a>根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。</h3><p><img src="/2016/2/demo.gif" alt="效果图"></p>
<p>兼容火狐、360极速和兼容模式…安卓手机360浏览器测试也正常</p>
<p><a href="/2016/2/index4.html">效果页面</a></p>
<a id="more"></a>
<p>兼容性或性能可能比较烂,不过都是最简单的JS实现的。其实就类似于一些轮播或banner图切换效果。只不过这个是全屏。</p>
<p>最外层的<code>container</code>高度为300%；里面放置三个<code>div</code>从上往下依次排列。<code>css</code>控制下每个<code>div</code>都是铺满浏览器可视窗口。</p>
<p><code>firefox</code>和<code>chrome</code>,<code>ie</code>的<code>mousewheel</code>兼容代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).on(<span class="string">"mousewheel DOMMouseScroll"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;  </div><div class="line">    <span class="keyword">var</span> delta = (e.originalEvent.wheelDelta &amp;&amp;</div><div class="line">    (e.originalEvent.wheelDelta &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">-1</span>)) || </div><div class="line">    (e.originalEvent.detail &amp;&amp; (e.originalEvent.detail &gt; <span class="number">0</span> </div><div class="line">    ? <span class="number">-1</span> : <span class="number">1</span>));              <span class="comment">//chrome &amp; ie || firefox</span></div><div class="line">    <span class="keyword">if</span> (delta &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="comment">// 向上滚        </span></div><div class="line">        scrollpage(<span class="string">'up'</span>);  	</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"wheelup"</span>);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="comment">// 向下滚</span></div><div class="line">        scrollpage(<span class="string">'down'</span>)</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"wheeldown"</span>);</div><div class="line">    &#125; </div><div class="line">    <span class="built_in">console</span>.log(e.originalEvent.detail||e.originalEvent.wheelDelta);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>后面,每一屏内添加一些<code>元素</code>.结合一些<code>css3</code>的<code>transform</code>和<code>transition</code>和<code>@keyframes</code>定义一些特效,就能达到一点点酷(装)炫(B)的效果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。&quot;&gt;&lt;a href=&quot;#根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。&quot; class=&quot;headerlink&quot; title=&quot;根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。&quot;&gt;&lt;/a&gt;根据鼠标滚动方向或者手机滑动方向然后切换上一屏或下一屏。感觉类似翻页。&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2016/2/demo.gif&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;兼容火狐、360极速和兼容模式…安卓手机360浏览器测试也正常&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2016/2/index4.html&quot;&gt;效果页面&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javascript" scheme="http://nodejs.wxwztj.com/categories/javascript/"/>
    
    
      <category term="h5" scheme="http://nodejs.wxwztj.com/tags/h5/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 Filter的特效</title>
    <link href="http://nodejs.wxwztj.com/2016/09/16/%E6%B5%85%E8%B0%88CSS3-Filter%E7%9A%8410%E7%A7%8D%E7%89%B9%E6%95%88/"/>
    <id>http://nodejs.wxwztj.com/2016/09/16/浅谈CSS3-Filter的10种特效/</id>
    <published>2016-09-16T07:51:00.000Z</published>
    <updated>2016-09-19T02:38:30.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="css语法"><a href="#css语法" class="headerlink" title="css语法"></a>css语法</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">filter: none | blur() | brightness() | contrast() | drop-shadow() | grayscale() |</div><div class="line">hue-rotate() | invert() | opacity() | saturate() | sepia() | url();</div></pre></td></tr></table></figure>
<h2 id="高斯模糊-blur-示例"><a href="#高斯模糊-blur-示例" class="headerlink" title="高斯模糊(blur)示例"></a>高斯模糊(blur)示例</h2><p><a href="/2016/css-filter/blur.html">demo</a><br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span> <span class="attr">class</span>=<span class="string">"no-js"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-class">.example</span> &#123;</div><div class="line">	    <span class="attribute">padding</span>: .<span class="number">625rem</span> <span class="number">1.825rem</span> .<span class="number">625rem</span> <span class="number">2.5rem</span>;</div><div class="line">	    <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#ccc</span> dashed;</div><div class="line">	    <span class="attribute">position</span>: relative;</div><div class="line">	    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> .<span class="number">625rem</span> <span class="number">0</span>;</div><div class="line">	    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</div><div class="line">        <span class="attribute">position</span>: absolute;   </div><div class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;   </div><div class="line">        <span class="attribute">left</span>: <span class="number">50%</span>;   </div><div class="line">        <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">-o-transform</span>: <span class="built_in">translate</span>(-50%, -50%);   </div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%); </div><div class="line">	&#125;</div><div class="line"><span class="selector-class">.example</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(data-text);</div><div class="line">    <span class="attribute">text-transform</span>: lowercase;</div><div class="line">    <span class="attribute">left</span>: <span class="number">1.5rem</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">11.875rem</span>;</div><div class="line">    <span class="attribute">color</span>: gray;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">1rem</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1rem</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">1rem</span>;</div><div class="line">    <span class="attribute">text-align</span>: right;</div><div class="line">    <span class="attribute">white-space</span>: nowrap;</div><div class="line">    <span class="attribute">direction</span>: ltr;</div><div class="line">    <span class="attribute">width</span>: <span class="number">12.5rem</span>;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(-90deg);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-90deg);</div><div class="line">    <span class="attribute">-webkit-transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</div><div class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">-webkit-filter</span>: <span class="built_in">blur</span>(5px); <span class="comment">/* Chrome, Safari, Opera */</span></div><div class="line">    <span class="attribute">filter</span>: <span class="built_in">blur</span>(5px);</div><div class="line">	<span class="attribute">-webkit-transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">-moz-transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">-o-transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">transition</span>: all .<span class="number">5s</span> ease-in-out;</div><div class="line">    <span class="attribute">-webkit-backface-visibility</span>: hidden;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateZ</span>(0) <span class="built_in">scale</span>(1.0, 1.0);</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">filter</span>:none&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"example"</span> <span class="attr">data-text</span>=<span class="string">"example"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图片使用高斯模糊效果:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://blog.wangchunjian.win/2016/marry.jpg"</span> <span class="attr">alt</span>=<span class="string">"marry"</span> &gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>注意：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> Internet Explorer 不支持 filter 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;css语法&quot;&gt;&lt;a href=&quot;#css语法&quot; class=&quot;headerlink&quot; title=&quot;css语法&quot;&gt;&lt;/a&gt;css语法&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;filter: none | blur() | brightness() | contrast() | drop-shadow() | grayscale() |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hue-rotate() | invert() | opacity() | saturate() | sepia() | url();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;高斯模糊-blur-示例&quot;&gt;&lt;a href=&quot;#高斯模糊-blur-示例&quot; class=&quot;headerlink&quot; title=&quot;高斯模糊(blur)示例&quot;&gt;&lt;/a&gt;高斯模糊(blur)示例&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;/2016/css-filter/blur.html&quot;&gt;demo&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="css3" scheme="http://nodejs.wxwztj.com/categories/css3/"/>
    
    
      <category term="filter" scheme="http://nodejs.wxwztj.com/tags/filter/"/>
    
  </entry>
  
  <entry>
    <title>Parallux-响应式网页视差效果</title>
    <link href="http://nodejs.wxwztj.com/2016/09/16/Parallux-%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%A7%86%E5%B7%AE%E6%95%88%E6%9E%9C/"/>
    <id>http://nodejs.wxwztj.com/2016/09/16/Parallux-响应式网页视差效果/</id>
    <published>2016-09-16T07:10:34.000Z</published>
    <updated>2016-09-19T02:38:57.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Parallax-js"><a href="#Parallax-js" class="headerlink" title="Parallax.js"></a>Parallax.js</h1><p>示例：</p>
<ul>
<li><a href="/2016/2/">Parallux-响应式网页滚动视觉差特效 &amp; CSS图片filter的blur模糊和灰色gray</a> </li>
<li><a href="/2016/1/">纯css3实现视觉差效果</a><a id="more"></a>
</li>
</ul>
<p>Parallax Engine that reacts to the orientation of a smart device. Where no gyroscope or motion detection hardware is available, the position of the cursor is used instead.</p>
<p>Check out this <strong><a href="http://wagerfield.github.com/parallax/" target="_blank" rel="external">demo</a></strong> to see it in action!</p>
<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>Create a list of elements giving each item that you want to move within your parallax scene a class of <code>layer</code> and a <code>data-depth</code> attribute specifying its depth within the scene. A depth of <strong>0</strong> will cause the layer to remain stationary, and a depth of <strong>1</strong> will cause the layer to move by the total effect of the calculated motion. Values inbetween <strong>0</strong> and <strong>1</strong> will cause the layer to move by an amount relative to the supplied ratio.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"scene"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer1.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.20"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer2.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.40"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer3.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.60"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer4.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.80"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer5.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"1.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"layer6.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>To kickoff a <strong>Parallax</strong> scene, select your parent DOM Element and pass it to the <strong>Parallax</strong> constructor.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scene = <span class="built_in">document</span>.getElementById(<span class="string">'scene'</span>);</div><div class="line"><span class="keyword">var</span> parallax = <span class="keyword">new</span> Parallax(scene);</div></pre></td></tr></table></figure>
<h2 id="Understanding-Layer-Motion-Calculations"><a href="#Understanding-Layer-Motion-Calculations" class="headerlink" title="Understanding Layer Motion Calculations"></a>Understanding Layer Motion Calculations</h2><p>The amount of motion that each layer moves by depends on 3 contributing factors:</p>
<ol>
<li>The <code>scalarX</code> and <code>scalarY</code> values (see <a href="#behaviours">Behaviours</a> below for configuration)</li>
<li>The dimensions of the parent DOM element</li>
<li>The <code>depth</code> of a layer within a parallax scene (specified by it’s <code>data-depth</code> attribute)</li>
</ol>
<p>The calculation for this motion is as follows:</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xMotion = parentElement.width  * (scalarX / <span class="number">100</span>) * layerDepth</div><div class="line">yMotion = parentElement.height * (scalarY / <span class="number">100</span>) * layerDepth</div></pre></td></tr></table></figure>
<p>So for a layer with a <code>data-depth</code> value of <code>0.5</code> within a scene that has both the <code>scalarX</code> and <code>scalarY</code> values set to <code>10</code> ( <em>the default</em> ) where the containing scene element is <code>1000px x 1000px</code>, the total motion of the layer in both <code>x</code> and <code>y</code> would be:</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xMotion = <span class="number">1000</span> * (<span class="number">10</span> / <span class="number">100</span>) * <span class="number">0.5</span> = <span class="number">50</span> <span class="comment"># 50px of positive and negative motion in x</span></div><div class="line">yMotion = <span class="number">1000</span> * (<span class="number">10</span> / <span class="number">100</span>) * <span class="number">0.5</span> = <span class="number">50</span> <span class="comment"># 50px of positive and negative motion in y</span></div></pre></td></tr></table></figure>
<h2 id="Behaviours"><a href="#Behaviours" class="headerlink" title="Behaviours"></a>Behaviours</h2><p>There are a number of behaviours that you can setup for any given <strong>Parallax</strong> instance. These behaviours can either be specified in the markup via data attributes or in JavaScript via the constructor and API.</p>
<table>
<thead>
<tr>
<th>Behaviour</th>
<th>Values</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>relativeInput</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to use the coordinate system of the <code>element</code> passed to the parallax <code>constructor</code>. <strong>Mouse input only.</strong></td>
</tr>
<tr>
<td><code>clipRelativeInput</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to clip the mouse input to the bounds of the <code>element</code> passed to the parallax <code>constructor</code>. <strong>Mouse input only.</strong></td>
</tr>
<tr>
<td><code>calibrate-x</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to cache &amp; calculate the motion relative to the initial <code>x</code> axis value on initialisation.</td>
</tr>
<tr>
<td><code>calibrate-y</code></td>
<td><code>true</code> or <code>false</code></td>
<td>Specifies whether or not to cache &amp; calculate the motion relative to the initial <code>y</code> axis value on initialisation.</td>
</tr>
<tr>
<td><code>invert-x</code></td>
<td><code>true</code> or <code>false</code></td>
<td><code>true</code> moves layers in opposition to the device motion, <code>false</code> slides them away.</td>
</tr>
<tr>
<td><code>invert-y</code></td>
<td><code>true</code> or <code>false</code></td>
<td><code>true</code> moves layers in opposition to the device motion, <code>false</code> slides them away.</td>
</tr>
<tr>
<td><code>limit-x</code></td>
<td><code>number</code> or <code>false</code></td>
<td>A numeric value limits the total range of motion in <code>x</code>, <code>false</code> allows layers to move with complete freedom.</td>
</tr>
<tr>
<td><code>limit-y</code></td>
<td><code>number</code> or <code>false</code></td>
<td>A numeric value limits the total range of motion in <code>y</code>, <code>false</code> allows layers to move with complete freedom.</td>
</tr>
<tr>
<td><code>scalar-x</code></td>
<td><code>number</code></td>
<td>Multiplies the input motion by this value, increasing or decreasing the sensitivity of the layer motion.</td>
</tr>
<tr>
<td><code>scalar-y</code></td>
<td><code>number</code></td>
<td>Multiplies the input motion by this value, increasing or decreasing the sensitivity of the layer motion.</td>
</tr>
<tr>
<td><code>friction-x</code></td>
<td><code>number</code> <code>0 - 1</code></td>
<td>The amount of friction the layers experience. This essentially adds some easing to the layer motion.</td>
</tr>
<tr>
<td><code>friction-y</code></td>
<td><code>number</code> <code>0 - 1</code></td>
<td>The amount of friction the layers experience. This essentially adds some easing to the layer motion.</td>
</tr>
<tr>
<td><code>origin-x</code></td>
<td><code>number</code></td>
<td>The <code>x</code> origin of the mouse input. Defaults to 0.5 (the center). <code>0</code> moves the origin to the left edge, <code>1</code> to the right edge. <strong>Mouse input only.</strong></td>
</tr>
<tr>
<td><code>origin-y</code></td>
<td><code>number</code></td>
<td>The <code>y</code> origin of the mouse input. Defaults to 0.5 (the center). <code>0</code> moves the origin to the top edge, <code>1</code> to the bottom edge. <strong>Mouse input only.</strong></td>
</tr>
</tbody>
</table>
<p>In addition to the behaviours described above, there are <strong>two</strong> methods <code>enable()</code> and <code>disable()</code> that <em>activate</em> and <em>deactivate</em> the <strong>Parallax</strong> instance respectively.</p>
<h3 id="Behaviours-Data-Attributes-Example"><a href="#Behaviours-Data-Attributes-Example" class="headerlink" title="Behaviours: Data Attributes Example"></a>Behaviours: Data Attributes Example</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"scene"</span></span></div><div class="line">  <span class="attr">data-calibrate-x</span>=<span class="string">"false"</span></div><div class="line">  <span class="attr">data-calibrate-y</span>=<span class="string">"true"</span></div><div class="line">  <span class="attr">data-invert-x</span>=<span class="string">"false"</span></div><div class="line">  <span class="attr">data-invert-y</span>=<span class="string">"true"</span></div><div class="line">  <span class="attr">data-limit-x</span>=<span class="string">"false"</span></div><div class="line">  <span class="attr">data-limit-y</span>=<span class="string">"10"</span></div><div class="line">  <span class="attr">data-scalar-x</span>=<span class="string">"2"</span></div><div class="line">  <span class="attr">data-scalar-y</span>=<span class="string">"8"</span></div><div class="line">  <span class="attr">data-friction-x</span>=<span class="string">"0.2"</span></div><div class="line">  <span class="attr">data-friction-y</span>=<span class="string">"0.8"</span></div><div class="line">  <span class="attr">data-origin-x</span>=<span class="string">"0.0"</span></div><div class="line">  <span class="attr">data-origin-y</span>=<span class="string">"1.0"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer1.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.20"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer2.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.40"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer3.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.60"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer4.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"0.80"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer5.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"layer"</span> <span class="attr">data-depth</span>=<span class="string">"1.00"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"graphics/layer6.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Behaviours-Constructor-Object-Example"><a href="#Behaviours-Constructor-Object-Example" class="headerlink" title="Behaviours: Constructor Object Example"></a>Behaviours: Constructor Object Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scene = <span class="built_in">document</span>.getElementById(<span class="string">'scene'</span>);</div><div class="line"><span class="keyword">var</span> parallax = <span class="keyword">new</span> Parallax(scene, &#123;</div><div class="line">  calibrateX: <span class="literal">false</span>,</div><div class="line">  calibrateY: <span class="literal">true</span>,</div><div class="line">  invertX: <span class="literal">false</span>,</div><div class="line">  invertY: <span class="literal">true</span>,</div><div class="line">  limitX: <span class="literal">false</span>,</div><div class="line">  limitY: <span class="number">10</span>,</div><div class="line">  scalarX: <span class="number">2</span>,</div><div class="line">  scalarY: <span class="number">8</span>,</div><div class="line">  frictionX: <span class="number">0.2</span>,</div><div class="line">  frictionY: <span class="number">0.8</span>,</div><div class="line">  originX: <span class="number">0.0</span>,</div><div class="line">  originY: <span class="number">1.0</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Behaviours-API-Example"><a href="#Behaviours-API-Example" class="headerlink" title="Behaviours: API Example"></a>Behaviours: API Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scene = <span class="built_in">document</span>.getElementById(<span class="string">'scene'</span>);</div><div class="line"><span class="keyword">var</span> parallax = <span class="keyword">new</span> Parallax(scene);</div><div class="line">parallax.enable();</div><div class="line">parallax.disable();</div><div class="line">parallax.updateLayers(); <span class="comment">// Useful for reparsing the layers in your scene if you change their data-depth value</span></div><div class="line">parallax.calibrate(<span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">parallax.invert(<span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">parallax.limit(<span class="literal">false</span>, <span class="number">10</span>);</div><div class="line">parallax.scalar(<span class="number">2</span>, <span class="number">8</span>);</div><div class="line">parallax.friction(<span class="number">0.2</span>, <span class="number">0.8</span>);</div><div class="line">parallax.origin(<span class="number">0.0</span>, <span class="number">1.0</span>);</div></pre></td></tr></table></figure>
<h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p>If you’re using <strong><a href="http://jquery.com/" target="_blank" rel="external">jQuery</a></strong> or <strong><a href="http://zeptojs.com/" target="_blank" rel="external">Zepto</a></strong> and would prefer to<br>use <strong>Parallax.js</strong> as a plugin, you’re in luck!</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#scene'</span>).parallax();</div></pre></td></tr></table></figure>
<h3 id="jQuery-Passing-Options"><a href="#jQuery-Passing-Options" class="headerlink" title="jQuery: Passing Options"></a>jQuery: Passing Options</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#scene'</span>).parallax(&#123;</div><div class="line">  calibrateX: <span class="literal">false</span>,</div><div class="line">  calibrateY: <span class="literal">true</span>,</div><div class="line">  invertX: <span class="literal">false</span>,</div><div class="line">  invertY: <span class="literal">true</span>,</div><div class="line">  limitX: <span class="literal">false</span>,</div><div class="line">  limitY: <span class="number">10</span>,</div><div class="line">  scalarX: <span class="number">2</span>,</div><div class="line">  scalarY: <span class="number">8</span>,</div><div class="line">  frictionX: <span class="number">0.2</span>,</div><div class="line">  frictionY: <span class="number">0.8</span>,</div><div class="line">  originX: <span class="number">0.0</span>,</div><div class="line">  originY: <span class="number">1.0</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="jQuery-API"><a href="#jQuery-API" class="headerlink" title="jQuery: API"></a>jQuery: API</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $scene = $(<span class="string">'#scene'</span>).parallax();</div><div class="line">$scene.parallax(<span class="string">'enable'</span>);</div><div class="line">$scene.parallax(<span class="string">'disable'</span>);</div><div class="line">$scene.parallax(<span class="string">'updateLayers'</span>);</div><div class="line">$scene.parallax(<span class="string">'calibrate'</span>, <span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">$scene.parallax(<span class="string">'invert'</span>, <span class="literal">false</span>, <span class="literal">true</span>);</div><div class="line">$scene.parallax(<span class="string">'limit'</span>, <span class="literal">false</span>, <span class="number">10</span>);</div><div class="line">$scene.parallax(<span class="string">'scalar'</span>, <span class="number">2</span>, <span class="number">8</span>);</div><div class="line">$scene.parallax(<span class="string">'friction'</span>, <span class="number">0.2</span>, <span class="number">0.8</span>);</div><div class="line">$scene.parallax(<span class="string">'origin'</span>, <span class="number">0.0</span>, <span class="number">1.0</span>);</div></pre></td></tr></table></figure>
<h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><p>If you are writing a <strong>native iOS application</strong> and would like to use <strong>parallax.js</strong> within a <code>UIWebView</code>, you will need to do a little bit of work to get it running.</p>
<p><code>UIWebView</code> no longer automatically receives the <code>deviceorientation</code> event, so your native application must intercept the events from the gyroscope and reroute them to the <code>UIWebView</code>:</p>
<ol>
<li>Include the <strong>CoreMotion</strong> framework <code>#import &lt;CoreMotion/CoreMotion.h&gt;</code> and create a reference to the <strong>UIWebView</strong> <code>@property(nonatomic, strong) IBOutlet UIWebView *parallaxWebView;</code></li>
<li>Add a property to the app delegate (or controller that will own the <strong>UIWebView</strong>) <code>@property(nonatomic, strong) CMMotionManager *motionManager;</code></li>
<li>Finally, make the following calls:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">self.motionManager = [[CMMotionManager alloc] init];</div><div class="line">if (self.motionManager.isGyroAvailable &amp;&amp; !self.motionManager.isGyroActive) &#123;</div><div class="line">  [self.motionManager setGyroUpdateInterval:0.5f]; // Set the event update frequency (in seconds)</div><div class="line">  [self.motionManager startGyroUpdatesToQueue:NSOperationQueue.mainQueue</div><div class="line">                                  withHandler:^(CMGyroData *gyroData, NSError *error) &#123;</div><div class="line">    NSString *js = [NSString stringWithFormat:@&quot;parallax.onDeviceOrientation(&#123;beta:%f, gamma:%f&#125;)&quot;, gyroData.rotationRate.x, gyroData.rotationRate.y];</div><div class="line">    [self.parallaxWebView stringByEvaluatingJavaScriptFromString:js];</div><div class="line">  &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><blockquote>
<p>As a prerequisite, you will need <a href="http://gulpjs.com/" target="_blank" rel="external">gulp</a> installed: <code>npm install -g gulp</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install</div><div class="line">gulp</div></pre></td></tr></table></figure>
<p>During development you can have gulp watch the <code>source</code> directory for changes and automatically build the <code>deploy</code> files by running:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp watch</div></pre></td></tr></table></figure>
<h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>Matthew Wagerfield: <a href="http://twitter.com/wagerfield" target="_blank" rel="external">@wagerfield</a></p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Licensed under <a href="http://www.opensource.org/licenses/mit-license.php" target="_blank" rel="external">MIT</a>. Enjoy.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Parallax-js&quot;&gt;&lt;a href=&quot;#Parallax-js&quot; class=&quot;headerlink&quot; title=&quot;Parallax.js&quot;&gt;&lt;/a&gt;Parallax.js&lt;/h1&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/2/&quot;&gt;Parallux-响应式网页滚动视觉差特效 &amp;amp; CSS图片filter的blur模糊和灰色gray&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/1/&quot;&gt;纯css3实现视觉差效果&lt;/a&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python 网易(MIT)公开课教程分享</title>
    <link href="http://nodejs.wxwztj.com/2016/09/16/python-%E7%BD%91%E6%98%93%E5%85%AC%E5%BC%80%E8%AF%BE%E6%95%99%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
    <id>http://nodejs.wxwztj.com/2016/09/16/python-网易公开课教程分享/</id>
    <published>2016-09-16T00:41:00.000Z</published>
    <updated>2016-09-16T00:42:45.925Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://open.163.com/special/opencourse/bianchengdaolun.html" target="_blank" rel="external">麻省理工学院公开课：计算机科学及编程导论</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://open.163.com/special/opencourse/bianchengdaolun.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;麻省理工学院公开课：计算机科学及编程导论&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="python" scheme="http://nodejs.wxwztj.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>http协议何时开启keep-alive(转)</title>
    <link href="http://nodejs.wxwztj.com/2016/09/14/http%E5%8D%8F%E8%AE%AE%E4%BD%95%E6%97%B6%E5%BC%80%E5%90%AFkeep-alive/"/>
    <id>http://nodejs.wxwztj.com/2016/09/14/http协议何时开启keep-alive/</id>
    <published>2016-09-14T05:20:00.000Z</published>
    <updated>2016-09-14T05:30:14.584Z</updated>
    
    <content type="html"><![CDATA[<h4 id="在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。"><a href="#在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。" class="headerlink" title="在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。"></a>在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。</h4><blockquote>
<p>大家知道HTTP构建在TCP之上。在HTTP早期实现中，每个HTTP请求都要打开一个socket连接。这种做效率很低，因为一个Web 页面中的很多HTTP请求都指向同一个服务器。例如，很多为Web页面中的图片发起的请求都指向一个通用的图片服务器。持久连接的引入解决了多对已请求服务器导致的socket连接低效性的问题。它使浏览器可以再一个单独的连接上进行多个请求。浏览器和服务器使用Connection头里指出对Keep-Alive的支持。</p>
</blockquote>
<a id="more"></a>
<p>笔者在去年遇到一个跟<code>Keep-Alive</code>的问题：</p>
<p>问题现象： 一个JSP页面，居然要耗时40多秒。网页中有大量的图片的CSS</p>
<p>问题解决： 原因也找了半天，原来Apache配置里面，把Keep-Alive的开关关闭了。这个是个大问题，工程师为什么要关闭它，原来他考虑的太简单了，我们知道Apache适合处于短连接的请求，处理时间越短，并发数才能上去，原来他是这么考虑，但是没有办法，只能这样了，还是打开Keep-Alive开关吧。</p>
<p>当然，不是所有的情况都设置KeepAlive为On，下面的文字总结比较好：</p>
<p>【在使用apache的过程中，KeepAlive属性我一直保持为默认值On，其实，该属性设置为On还是Off还是要具体问题具体分析的，在生产环境中的影响还是蛮大的。</p>
<p>KeepAlive选项到底有什么用处？如果你用过Mysql ，应该知道Mysql的连接属性中有一个与KeepAlive 类似的Persistent Connection，即：长连接(PConnect)。该属性打开的话，可以使一次TCP连接为同一用户的多次请求服务，提高了响应速度。</p>
<p>比如很多网页中图片、CSS、JS、Html都在一台Server上，当用户访问其中的Html网页时，网页中的图片、Css、Js都构成了访问请求，打开KeepAlive 属性可以有效地降低TCP握手的次数(当然浏览器对同一域下同时请求的图片数有限制，一般是2)，减少httpd进程数，从而降低内存的使用(假定prefork模式)。MaxKeepAliveRequests 和KeepAliveTimeOut 两个属性在KeepAlive =On时起作用，可以控制持久连接的生存时间和最大服务请求数。</p>
<p>不过，上面说的只是一种情形，那就是静态网页居多的情况下，并且网页中的其他请求与网页在同一台Server上。当你的应用动态程序(比如：php )居多，用户访问时由动态程序即时生成html内容，html内容中图片素材和Css、Js等比较少或者散列在其他Server上时，KeepAlive =On反而会降低Apache 的性能。为什么呢？</p>
<p>前面提到过，KeepAlive =On时，每次用户访问，打开一个TCP连接，Apache 都会保持该连接一段时间，以便该连接能连续为同一client服务，在KeepAliveTimeOut还没到期并且MaxKeepAliveRequests还没到阈值之前，Apache 必然要有一个httpd进程来维持该连接，httpd进程不是廉价的，他要消耗内存和CPU时间片的。假如当前Apache 每秒响应100个用户访问，KeepAliveTimeOut=5，此时httpd进程数就是100<em>5=500个(prefork 模式)，一个httpd进程消耗5M内存的话，就是500</em>5M=2500M=2.5G，夸张吧？当然，Apache 与Client只进行了100次TCP连接。如果你的内存够大，系统负载不会太高，如果你的内存小于2.5G，就会用到Swap，频繁的Swap切换会加重CPU的Load。</p>
<p>现在我们关掉KeepAlive ，Apache 仍然每秒响应100个用户访问，因为我们将图片、js、css等分离出去了，每次访问只有1个request，此时httpd的进程数是100<em>1=100个，使用内存100</em>5M=500M，此时Apache 与Client也是进行了100次TCP连接。性能却提升了太多。</p>
<p>总结：</p>
<p>1、当你的Server内存充足时，KeepAlive =On还是Off对系统性能影响不大。</p>
<p>2、当你的Server上静态网页(Html、图片、Css、Js)居多时，建议打开KeepAlive 。</p>
<p>3、当你的Server多为动态请求(因为连接数据库，对文件系统访问较多)，KeepAlive 关掉，会节省一定的内存，节省的内存正好可以作为文件系统的Cache(vmstat命令中cache一列)，降低I/O压力。</p>
<p>PS：当KeepAlive =On时，KeepAliveTimeOut的设置其实也是一个问题，设置的过短，会导致Apache 频繁建立连接，给Cpu造成压力，设置的过长，系统中就会堆积无用的Http连接，消耗掉大量内存，具体设置多少，可以进行不断的调节，因你的网站浏览和服务器配置 而异。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。&quot;&gt;&lt;a href=&quot;#在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。&quot; class=&quot;headerlink&quot; title=&quot;在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。&quot;&gt;&lt;/a&gt;在网页开发过程中，Keep-Alive是HTTP协议中非常重要的一个属性。&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;大家知道HTTP构建在TCP之上。在HTTP早期实现中，每个HTTP请求都要打开一个socket连接。这种做效率很低，因为一个Web 页面中的很多HTTP请求都指向同一个服务器。例如，很多为Web页面中的图片发起的请求都指向一个通用的图片服务器。持久连接的引入解决了多对已请求服务器导致的socket连接低效性的问题。它使浏览器可以再一个单独的连接上进行多个请求。浏览器和服务器使用Connection头里指出对Keep-Alive的支持。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="http" scheme="http://nodejs.wxwztj.com/categories/http/"/>
    
    
      <category term="http" scheme="http://nodejs.wxwztj.com/tags/http/"/>
    
      <category term="keep-alive" scheme="http://nodejs.wxwztj.com/tags/keep-alive/"/>
    
  </entry>
  
  <entry>
    <title>python使用aiohttp异步框架编写web 并部署到centos上</title>
    <link href="http://nodejs.wxwztj.com/2016/09/13/%E4%BD%BF%E7%94%A8aiohttp%E5%BC%82%E6%AD%A5%E6%A1%86%E6%9E%B6%E7%BC%96%E5%86%99web/"/>
    <id>http://nodejs.wxwztj.com/2016/09/13/使用aiohttp异步框架编写web/</id>
    <published>2016-09-13T00:40:00.000Z</published>
    <updated>2016-09-19T06:17:24.072Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>web框架使用<code>aiohttp</code>,模板引擎<code>jinja2</code>,数据库操作使用<code>aiomysql</code>稍作封装的一个<code>ORM</code>(廖雪峰的教程上提供的 <a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014323389656575142d0bcfeec434e9639a80d3684a7da000" target="_blank" rel="external">编写ORM</a>)</p>
<a id="more"></a>
<h3 id="安装python3-5-2"><a href="#安装python3-5-2" class="headerlink" title="安装python3.5.2"></a>安装python3.5.2</h3><p><code>centos6.4</code>上自带了2.6的Python,YUM命令会依赖python 2.X，下面是安装python 3.5.X 的步骤</p>
<ul>
<li>wget –no-check-certificate <a href="http://mirrors.sohu.com/python/3.5.2/Python-3.5.2.tgz" target="_blank" rel="external">http://mirrors.sohu.com/python/3.5.2/Python-3.5.2.tgz</a></li>
<li>tar -zxvf Python-3.5.2.tgz</li>
<li>cd Python-3.5.2</li>
<li>./configure –prefix=/usr/local/python3.5 –enable-shared</li>
<li>make &amp;&amp; make install</li>
<li>ln -s /usr/local/python3.5/bin/python3 /usr/bin/python3</li>
<li>此时运行python3命令的话会报错，缺少.so文件，我们需要进行如下操作</li>
<li>cp -R /usr/local/python3.5/lib/* /usr/lib64/</li>
</ul>
<blockquote>
<p>安装python3.5.2的时候,会自动把<code>setuptools</code>和<code>pip</code>一起安装了</p>
</blockquote>
<h3 id="依赖库"><a href="#依赖库" class="headerlink" title="依赖库"></a>依赖库</h3><ul>
<li>/usr/bin/python3 -m pip install aiohttp_jinja2 –trusted-host pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install aiomysql –trusted-host * pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install aiohttp_session –trusted-host pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install cryptography –trusted-host pypi.douban.com</li>
<li>/usr/bin/python3 -m pip install –upgrade pip –trusted-host pypi.douban.com</li>
</ul>
<blockquote>
<p>系统默认的python版本依然是2.6,运行pip 带上python3的路径即可。另外搜狐的镜像和豆瓣的资源，速度确实快。。。<code>aiohttp_session</code>会依赖<code>cryptography</code>库</p>
</blockquote>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>将编辑好的代码上传到服务器,<code>Xshell</code> 进入 <code>www</code> 目录,使用<code>nohup</code>命令后台运行..</p>
<ul>
<li><code>nohup /usr/bin/python3 app.py &amp;</code></li>
<li><code>exit</code><h4 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">upstream</span> python_app &#123;<span class="attribute">server</span> <span class="number">127.0.0.1:9000</span>;&#125;   </div><div class="line"><span class="section">server</span> &#123;</div><div class="line">  <span class="attribute">listen</span>       <span class="number">80</span>;</div><div class="line">  <span class="attribute">server_name</span>  test.wxwztj.com;</div><div class="line"></div><div class="line">  <span class="attribute">location</span> / &#123;</div><div class="line">  <span class="attribute">proxy_pass</span> http://python_app;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="attribute">location</span> <span class="regexp">~* .(gif|jpg|jpeg|png|css|js|ico)$</span> &#123;</div><div class="line">  <span class="attribute">root</span> /www/web/awesome-python3-webapp/www;</div><div class="line">  <span class="attribute">expires</span> <span class="number">1h</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>必须使用<code>exit</code>退出,直接断开或关闭Xshell,<code>nohup</code>的这条后台进程会挂掉。。。<br><code>nohup /usr/bin/python3 test.py &gt;/dev/null 2&gt;&amp;1 &amp;</code> 如果不想输出任何信息，可以在<code>nohup command</code> 后面加上<code>&gt;/dev/null 2&gt;&amp;1</code>,最后末尾加上<code>&amp;</code>结束,只输出错误日志并指定错误输出文件<code>nohup ./program &gt;/dev/null 2&gt;log &amp;</code> 文件名缺省则默认为<code>nohup.out</code>.</p>
</blockquote>
<p>界面使用<code>Uikit</code>和<code>Vue.js</code>.Vue的绑定感觉和Angularjs相似,<code>aiohttp</code>也可以编写<code>middleware</code>实现错误处理、验证登录、控制访问权限等。</p>
<h2 id="网站最后效果展示"><a href="#网站最后效果展示" class="headerlink" title="网站最后效果展示"></a><a href="http://test.wxwztj.com/" target="_blank" rel="external">网站最后效果展示</a></h2><h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a><a href="/2016/awesome-python3-webapp.zip">代码下载</a></h2><p><code>test.py</code>是入口文件,<code>app.py</code>以及其他文件是廖老师的demo。</p>
<p><code>orm</code>想使用<code>SQLAlchemy</code>异步编程的话,只能使用<code>aiomysql.sa</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"><span class="keyword">import</span> sqlalchemy <span class="keyword">as</span> sa</div><div class="line"><span class="keyword">from</span> sqlalchemy.types <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> func</div><div class="line"><span class="keyword">import</span> time,uuid,hashlib</div><div class="line"></div><div class="line"><span class="keyword">from</span> aiomysql.sa <span class="keyword">import</span> create_engine</div><div class="line"></div><div class="line"></div><div class="line">metadata=sa.MetaData()</div><div class="line"></div><div class="line"></div><div class="line">users = sa.Table(<span class="string">'users'</span>, metadata,</div><div class="line">               sa.Column(<span class="string">'id'</span>, Integer, primary_key=<span class="keyword">True</span>),</div><div class="line">               sa.Column(<span class="string">'email'</span>,String(<span class="number">50</span>)),</div><div class="line">               sa.Column(<span class="string">'passwd'</span>,String(<span class="number">50</span>)),</div><div class="line">               sa.Column(<span class="string">'image'</span>,String(<span class="number">500</span>)),</div><div class="line">               sa.Column(<span class="string">'admin'</span>,BOOLEAN),</div><div class="line">               sa.Column(<span class="string">'name'</span>, String(<span class="number">255</span>)),</div><div class="line">               sa.Column(<span class="string">'created_at'</span>,FLOAT())</div><div class="line">                 )</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_id</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'%015d%s000'</span> % (int(time.time() * <span class="number">1000</span>),uuid.uuid4().hex)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd_user</span><span class="params">(id,passwd)</span>:</span></div><div class="line">    sha1 = hashlib.sha1()</div><div class="line">    sha1.update(id.encode(<span class="string">'utf-8'</span>))</div><div class="line">    sha1.update(<span class="string">b':'</span>)</div><div class="line">    sha1.update(passwd.encode(<span class="string">'utf-8'</span>))</div><div class="line">    <span class="keyword">return</span> sha1.hexdigest()</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@asyncio.coroutine</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_pool</span><span class="params">(loop,**kw)</span>:</span></div><div class="line">    <span class="keyword">global</span> __pool</div><div class="line">    __pool = <span class="keyword">yield</span> <span class="keyword">from</span> create_engine(</div><div class="line">        host = kw.get(<span class="string">'host'</span>,<span class="string">'127.0.0.1'</span>),</div><div class="line">        port = kw.get(<span class="string">'port'</span>,<span class="number">3306</span>),</div><div class="line">        user = kw[<span class="string">'user'</span>],</div><div class="line">        password = kw[<span class="string">'password'</span>],</div><div class="line">        db = kw[<span class="string">'db'</span>],</div><div class="line">        charset = kw.get(<span class="string">'charset'</span>,<span class="string">'utf8'</span>),</div><div class="line">        autocommit = kw.get(<span class="string">'autocommit'</span>,<span class="keyword">True</span>),</div><div class="line">        maxsize = kw.get(<span class="string">'maxsize'</span>,<span class="number">10</span>),</div><div class="line">        minsize = kw.get(<span class="string">'minsize'</span>,<span class="number">1</span>),</div><div class="line">        loop = loop</div><div class="line">    )</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@asyncio.coroutine</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">go</span><span class="params">(in_loop)</span>:</span></div><div class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> create_pool(in_loop,user=<span class="string">'root'</span>,password=<span class="string">'root'</span>,db=<span class="string">'awesome'</span>)</div><div class="line">    <span class="keyword">global</span> __pool</div><div class="line">    <span class="keyword">with</span> (<span class="keyword">yield</span> <span class="keyword">from</span> __pool) <span class="keyword">as</span> conn:</div><div class="line">        user_id=next_id()</div><div class="line">        print(users.insert().values(name=<span class="string">'jinja2'</span>,id=user_id,passwd=pwd_user(user_id,<span class="string">'123456'</span>),</div><div class="line">                                                       email=<span class="string">'222@qq.com'</span>,image=<span class="string">'image:blank'</span>))</div><div class="line">        res = <span class="keyword">yield</span> <span class="keyword">from</span> conn.execute(users.select())</div><div class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> res:</div><div class="line">            print(row)</div><div class="line"></div><div class="line"></div><div class="line">loop=asyncio.get_event_loop()</div><div class="line">loop.run_until_complete(go(loop))</div><div class="line"></div><div class="line">__pool.close()</div><div class="line">loop.run_until_complete(__pool.wait_closed())</div><div class="line">loop.close()</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;web框架使用&lt;code&gt;aiohttp&lt;/code&gt;,模板引擎&lt;code&gt;jinja2&lt;/code&gt;,数据库操作使用&lt;code&gt;aiomysql&lt;/code&gt;稍作封装的一个&lt;code&gt;ORM&lt;/code&gt;(廖雪峰的教程上提供的 &lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014323389656575142d0bcfeec434e9639a80d3684a7da000&quot;&gt;编写ORM&lt;/a&gt;)&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://nodejs.wxwztj.com/categories/python/"/>
    
    
      <category term="python" scheme="http://nodejs.wxwztj.com/tags/python/"/>
    
      <category term="nohup" scheme="http://nodejs.wxwztj.com/tags/nohup/"/>
    
      <category term="aiohttp" scheme="http://nodejs.wxwztj.com/tags/aiohttp/"/>
    
      <category term="jinja2" scheme="http://nodejs.wxwztj.com/tags/jinja2/"/>
    
  </entry>
  
</feed>
